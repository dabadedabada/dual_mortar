function FE = fe_init(etype,o)
% initialize finite element of type etype to integrate polynomials of order o

% default quadrature order
if nargin == 1
  switch etype
    case 'line2' ,   o = 1; % 1D *******************************************
    case 'line3' ,   o = 2;
    case 'tria3' ,   o = 2; % 2D *******************************************
    case 'tria6' ,   o = 3;
    case 'quad4' ,   o = 2;
    case 'quad8' ,   o = 3;
    case 'quad9' ,   o = 3;
    case 'tetr4' ,   o = 2; % 3D *******************************************
    case 'tetr10',   o = 3;
    case 'hexa8' ,   o = 2;
    case 'hexa20',   o = 3;
    case 'hexa27',   o = 3;
    otherwise   , error(['Cannot set default integration order for element type ',etype]);
  end
end

% *************************************************************************
% *** QUADRATURE **********************************************************
% *************************************************************************
switch etype(1:4)
  case 'line'
    % *** LINE QUADRATURE *************************************************
    switch o % https://en.wikipedia.org/wiki/Gaussian_quadrature
      %        http://www-troja.fjfi.cvut.cz/~klimo/nm/c8/legpoly.pdf
      case 1
        FE.QP =                         0;
        FE.QW =                         2;
      case 2
        FE.QP = [              -1/sqrt(3),                1/sqrt(3)];
        FE.QW = [                       1,                        1];
      case 3
        FE.QP = [              -sqrt(3/5),                        0,               sqrt(3/5)];
        FE.QW = [                     5/9,                      8/9,                     5/9];
      case 4
        FE.QP = [-sqrt(3/7+sqrt(6/5)*2/7), -sqrt(3/7-sqrt(6/5)*2/7), sqrt(3/7-sqrt(6/5)*2/7), sqrt(3/7+sqrt(6/5)*2/7)];
        FE.QW = [        (18-sqrt(30))/36,         (18+sqrt(30))/36,        (18+sqrt(30))/36,        (18-sqrt(30))/36];
      case 5
        FE.QP = [ -sqrt(5+2*sqrt(10/7))/3,  -sqrt(5-2*sqrt(10/7))/3,                       0,  sqrt(5-2*sqrt(10/7))/3, sqrt(5+2*sqrt(10/7))/3];
        FE.QW = [   (322-13*sqrt(70))/900,    (322+13*sqrt(70))/900,                 128/225,   (322+13*sqrt(70))/900,  (322-13*sqrt(70))/900];
      case 6
        FE.QP = [ -0.932469514203152     ,  -0.661209386466265     , -0.238619186083197     ,  0.238619186083197     , 0.661209386466265     , 0.932469514203152];
        FE.QW = [  0.171324492379170     ,   0.360761573048139     ,  0.467913934572691     ,  0.467913934572691     , 0.360761573048139     , 0.171324492379170];
      case 7
        FE.QP = [ -0.949107912342759     ,  -0.741531185599394     , -0.405845151377397     ,  0.000000000000000     , 0.405845151377397     , 0.741531185599394, 0.949107912342759];
        FE.QW = [  0.129484966168870     ,   0.279705391489277     ,  0.381830050505119     ,  0.417959183673469     , 0.381830050505119     , 0.279705391489277, 0.129484966168870];
      case 8
        FE.QP = [ -0.960289856497536     ,  -0.796666477413627     ,  -0.525532409916329     ,  -0.183434642495650   ,  0.183434642495650    , 0.525532409916329, 0.796666477413627, 0.960289856497536];
        FE.QW = [  0.101228536290376     ,   0.222381034453374     ,   0.313706645877887     ,   0.362683783378362   ,  0.362683783378362    , 0.313706645877887, 0.222381034453374, 0.101228536290376];
      otherwise
        error(' ... not programmed yet');
    end
    FE.Cxi = 0;
  case 'tria'
    % *** TRIA QUADRATURE *************************************************
    switch o
      %   1                     2                    3                    4                    5                    6                    7                    8                    9                   10                   11                   12                   13                   14
      case 1
        FE.QP = [...
          1/3;...
          1/3];
        FE.QW =  ...
          1/2;
      case 2
        FE.QP = [...
          1/6                 , 2/3                , 1/6;...
          1/6                 , 1/6                , 2/3];
        FE.QW = [...
          1/6                 , 1/6                , 1/6];
      case 3
        FE.QP = [...
          1/3                 , 1/5                , 3/5                , 1/5;...
          1/3                 , 1/5                , 1/5                , 3/5];
        FE.QW = [...
          -27/96              , 25/96              , 25/96              , 25/96];
      case 4
        FE.QP = [...
          0.091576213509771   , 0.816847572980459  , 0.091576213509771  , 0.445948490915965  , 0.108103018168070  , 0.445948490915965;...
          0.091576213509771   , 0.091576213509771  , 0.816847572980459  , 0.445948490915965  , 0.445948490915965  , 0.108103018168070];
        FE.QW = [...
          0.109951743655322/2 , 0.109951743655322/2, 0.109951743655322/2, 0.223381589678011/2, 0.223381589678011/2, 0.223381589678011/2];
      case 5
        FE.QP = [...
          0.333333333333333   , 0.101286507323456  , 0.797426985353087  , 0.101286507323456  , 0.470142064105115  , 0.059715871789770  , 0.470142064105115;...
          0.333333333333333   , 0.101286507323456  , 0.101286507323456  , 0.797426985353087  , 0.470142064105115  , 0.470142064105115  , 0.059715871789770];
        FE.QW = [...
          0.225000000000000/2 , 0.125939180544827/2, 0.125939180544827/2, 0.125939180544827/2, 0.132394152788506/2, 0.132394152788506/2, 0.132394152788506/2];
      case 6
        FE.QP = [...
          0.063089014491502   , 0.873821971016996  , 0.063089014491502  , 0.249286745170910  , 0.501426509658179  , 0.249286745170910  , 0.310352451033785  , 0.053145049844816  , 0.636502499121399  , 0.636502499121399  , 0.053145049844816  , 0.310352451033785;...
          0.063089014491502   , 0.063089014491502  , 0.873821971016996  , 0.249286745170910  , 0.249286745170910  , 0.501426509658179  , 0.053145049844816  , 0.310352451033785  , 0.053145049844816  , 0.310352451033785  , 0.636502499121399  , 0.636502499121399];
        FE.QW = [...
          0.050844906370207/2 , 0.050844906370207/2, 0.050844906370207/2, 0.116786275726379/2, 0.116786275726379/2, 0.116786275726379/2, 0.082851075618374/2, 0.082851075618374/2, 0.082851075618374/2, 0.082851075618374/2, 0.082851075618374/2, 0.082851075618374/2];
      case 7
        FE.QP = [...
          0.333333333333333   , 0.260345966079038  , 0.479308067841923  , 0.260345966079038  , 0.065130102902216  , 0.869739794195568  , 0.065130102902216  , 0.312865496004875  , 0.048690315425316  , 0.638444188569809  , 0.638444188569809  , 0.048690315425316  , 0.312865496004875;...
          0.333333333333333   , 0.260345966079038  , 0.260345966079038  , 0.479308067841923  , 0.065130102902216  , 0.065130102902216  , 0.869739794195568  , 0.048690315425316  , 0.312865496004875  , 0.048690315425316  , 0.312865496004875  , 0.638444188569809  , 0.638444188569809];
        FE.QW = [...
          -0.149570044467670/2, 0.175615257433204/2, 0.175615257433204/2, 0.175615257433204/2, 0.053347235608839/2, 0.053347235608839/2, 0.053347235608839/2, 0.077113760890257/2, 0.077113760890257/2, 0.077113760890257/2, 0.077113760890257/2, 0.077113760890257/2, 0.077113760890257/2];
      otherwise
        error(' ... not programmed yet');
    end
    FE.Cxi = [1;1]/3;
  case 'quad'
    % *** QUAD QUADRATURE *************************************************
    switch o
      case 1    ,   FE1d = fe_init('line',1);
      case {2,3},   FE1d = fe_init('line',2);
      case {4,5},   FE1d = fe_init('line',3);
      case {6,7},   FE1d = fe_init('line',4);
      case {8,9},   FE1d = fe_init('line',5);
      otherwise
        error(' ... not programmed yet');
    end
    tmp = ones(1,size(FE1d.QW,2));
    FE.QP = [reshape(kron(FE1d.QP',    tmp),1,[]); reshape(kron(    tmp',FE1d.QP),1,[])];
    FE.QW =  reshape(kron(FE1d.QW',FE1d.QW),1,[]);
    if o == 8
      FE.QP = [...
        0.0                                , 0.0                               ,  0.0                               ,  0.0                               , -0.63909130490036965340323526403172, 0.63909130490036965340323526403172, -0.93706907692499044375223108089477, 0.93706907692499044375223108089477, -0.53708353054149367789764810599272, 0.53708353054149367789764810599272, -0.88718850644962463901968824898949,  0.88718850644962463901968824898949, -0.49469882067019633202429566148486,  0.49469882067019633202429566148487, -0.89749581827976753753405583986329 ,  0.89749581827976753753405583986329 ;...
        0.0                                , 0.75762917766050544752486182186156, -0.23687184225570189338644222172636, -0.98971792904452668131489483514312,  0.95052095564566688358766795634644, 0.95052095564566688358766795634644,  0.66388273688563317836212430624364, 0.66388273688563317836212430624364,  0.30421068172410450904224326756198, 0.30421068172410450904224326756198, -0.2364967185361194806572534629308 , -0.2364967185361194806572534629308 , -0.69895347608656355992463156993202, -0.69895347608656355992463156993202, -0.90039077421157973356347334412057 , -0.90039077421157973356347334412057 ];
      FE.QW = [...
        0.055364705621439772246336010854973, 0.40438936872607541333428973494895,  0.53354660495263445535327684689234,  0.11705418878673920642471837228175,  0.1256144176137468041318570522381 , 0.1256144176137468041318570522381 ,  0.13654458473358846733314799614166, 0.13654458473358846733314799614166,  0.48340847921125695111026552238112, 0.48340847921125695111026552238112,  0.25252850642954369338034098467654,  0.25252850642954369338034098467654,  0.36126232388217256912606760217776,  0.36126232388217256912606760217776,  0.085464254086247091239010359895814,  0.085464254086247091239010359895814];
    end
    FE.Cxi = [0;0];
  case 'tetr'
    % *** TETR QUADRATURE *************************************************
    switch o
      case 1
        FE.QP = [...
          0.25;...
          0.25;...
          0.25];
        FE.QW = [...
          0.16666666666666666666666666666667 ];
      case 2
        FE.QP = [...
          0.13819660112501051517954131656344 , 0.58541019662496845446137605030969   , 0.13819660112501051517954131656344  , 0.13819660112501051517954131656344 ;...
          0.13819660112501051517954131656344 , 0.13819660112501051517954131656344   , 0.58541019662496845446137605030969  , 0.13819660112501051517954131656344 ;...
          0.13819660112501051517954131656344 , 0.13819660112501051517954131656344   , 0.13819660112501051517954131656344  , 0.58541019662496845446137605030969 ];
        FE.QW = [...
          0.041666666666666666666666666666667, 0.041666666666666666666666666666667  , 0.041666666666666666666666666666667 , 0.041666666666666666666666666666667];
      case 3
        FE.QP = [...
          0.25                               , 0.16666666666666666666666666666667   , 0.5                                 , 0.16666666666666666666666666666667  , 0.16666666666666666666666666666667 ;...
          0.25                               , 0.16666666666666666666666666666667   , 0.16666666666666666666666666666667  , 0.5                                 , 0.16666666666666666666666666666667 ;...
          0.25                               , 0.16666666666666666666666666666667   , 0.16666666666666666666666666666667  , 0.16666666666666666666666666666667  , 0.5                                ];
        FE.QW = [...
          -0.13333333333333333333333333333333, 0.075                                , 0.075                               , 0.075                               , 0.075                              ];
      case 4
        FE.QP = [...
          0.25                                , 0.071428571428571428571428571428571 , 0.78571428571428571428571428571429  , 0.071428571428571428571428571428571 , 0.071428571428571428571428571428571 , 0.39940357616679920499610214746164 , 0.39940357616679920499610214746164 , 0.10059642383320079500389785253836 , 0.10059642383320079500389785253836 , 0.10059642383320079500389785253836 , 0.39940357616679920499610214746164 ;...
          0.25                                , 0.071428571428571428571428571428571 , 0.071428571428571428571428571428571 , 0.78571428571428571428571428571429  , 0.071428571428571428571428571428571 , 0.39940357616679920499610214746164 , 0.10059642383320079500389785253836 , 0.10059642383320079500389785253836 , 0.39940357616679920499610214746164 , 0.39940357616679920499610214746164 , 0.10059642383320079500389785253836 ;...
          0.25                                , 0.071428571428571428571428571428571 , 0.071428571428571428571428571428571 , 0.071428571428571428571428571428571 , 0.78571428571428571428571428571429  , 0.10059642383320079500389785253836 , 0.10059642383320079500389785253836 , 0.39940357616679920499610214746164 , 0.10059642383320079500389785253836 , 0.39940357616679920499610214746164 , 0.39940357616679920499610214746164 ];
        FE.QW = [...
          -0.013155555555555555555555555555556, 0.0076222222222222222222222222222222, 0.0076222222222222222222222222222222, 0.0076222222222222222222222222222222, 0.0076222222222222222222222222222222, 0.024888888888888888888888888888889, 0.024888888888888888888888888888889, 0.024888888888888888888888888888889, 0.024888888888888888888888888888889, 0.024888888888888888888888888888889, 0.024888888888888888888888888888889];
      case 5
        FE.QP = [...



        FE.QW = [...
          0.012248840519393658257285034247721 , 0.012248840519393658257285034247721 , 0.012248840519393658257285034247721 , 0.012248840519393658257285034247721 , 0.018781320953002641799864275388881 , 0.018781320953002641799864275388881, 0.018781320953002641799864275388881, 0.018781320953002641799864275388881, 0.0070910034628469110730115713533762, 0.0070910034628469110730115713533762, 0.0070910034628469110730115713533762, 0.0070910034628469110730115713533762, 0.0070910034628469110730115713533762, 0.0070910034628469110730115713533762];
      otherwise
        error(' ... not programmed yet');
    end
    FE.Cxi = [0.25;0.25;0.25];
  case 'pris'
    % *** PRIS QUADRATURE *************************************************
    switch o
      case 1    ,   FE1d = fe_init('line',1); FEt = fe_init('tria',o);
      case {2,3},   FE1d = fe_init('line',2); FEt = fe_init('tria',o);
      case {4,5},   FE1d = fe_init('line',3); FEt = fe_init('tria',o);
      case {6,7},   FE1d = fe_init('line',4); FEt = fe_init('tria',o);
      otherwise
        error(' ... not programmed yet');
    end
    FE.QP  = [reshape(kron(FEt.QP(1,:),(1+0*FE1d.QP)),[],1)  reshape(kron(FEt.QP(2,:),(1+0*FE1d.QP)),[],1)  reshape(kron((1+0*FEt.QP(1,:)),FE1d.QP),[],1)]';
    FE.QW  = (reshape(kron(FEt.QW,(1+0*FE1d.QW)),[],1).*reshape(kron((1+0*FEt.QW),FE1d.QW),[],1))';
  case 'pyra'
    % *** PYRA QUADRATURE *************************************************
    switch o 
      % https://code-aster.org/doc/v12/en/man_r/r3/r3.01.01.pdf
      case {1,2}
        A1 = 0.5;
        H1 = 0.1531754163448146;
        H2 = 0.6372983346207416;
        W1 = 2/15;
        FE.QP = [...
          A1, 0 , -A1,  0 , 0 ;...
          0 , A1,  0 , -A1, 0 ;...
          H1, H1,  H1,  H1, H2];
        FE.QW = [...
          W1, W1,  W1,  W1, W1]; 
      case {3,4}
        A1 = 0.5702963741068025;
        H1 = 0.1666666666666666;
        H2 = 0.08063183038464675;
        H3 = 0.6098484849057127;
        W1 = 0.1024890634400000;
        W2 = 0.1100000000000000;
        W3 = 0.1467104129066667;
        FE.QP = [...
          A1, 0 , -A1,  0 , 0 , 0 ;...
          0 , A1,  0 , -A1, 0 , 0 ;...
          H1, H1,  H1,  H1, H2, H3];
        FE.QW = [...
          W1, W1,  W1,  W1, W2, W3];
      case {5,6} %% WRONG
        b1 = 0.848418011;
        c1 = 0.652816472;
        d1 = 1.106412899;
        H1 = 1/2;
        H2 = (1-b1)/2;
        H3 = (1+b1)/2;
        H4 = (1-c1)/2;
        H5 = (1+c1)/2;
        H6 = (1-d1)/2;
        H8 = (1+d1)/2;
        A1 = b1*(1-H1)/2;
        A4 = c1*(1-H4);
        A5 = c1*(1-H5);
        A6 = d1*(1-H6)/2;
        A7 = d1*(1-H1);
        A8 = d1*(1-H8)/2;
        W0 = 0.788073483; % a1
        W1 = 0.499369002; % b6
        W4 = 0.478508449; % c8
        W6 = 0.032303742; % d12
        FE.QP = [...   
          0 , A1, 0 , -A1,  0 , 0 , 0 , A4, 0 , -A4,  0 , A5, 0 , -A5,  0 , A6, 0 , -A6,  0 , A7, 0 , -A7,  0 , A8, 0 , -A8,  0 ;...
          0 , 0 , A1,  0 , -A1, 0 , 0 , 0 , A4,  0 , -A4, 0 , A5,  0 , -A5, 0 , A6,  0 , -A6, 0 , A7,  0 , -A7, 0 , A8,  0 , -A8;...
          H1, H1, H1,  H1,  H1, H2, H3, H4, H4,  H4,  H4, H5, H5,  H5,  H5, H6, H6,  H6,  H6, H1, H1,  H1,  H1, H8, H8,  H8,  H8];
        FE.QW = [...
          W0, W1, W1,  W1,  W1, W1, W1, W4, W4,  W4,  W4, W4, W4,  W4,  W4, W6, W6,  W6,  W6, W6, W6,  W6,  W6, W6, W6,  W6,  W6]; 
      otherwise
        error(' ... not programmed yet');
      % https://people.math.sc.edu/Burkardt/cpp_src/felippa/felippa.cpp
      %case {1}
      %  FE.QP = [...
      %    -0.48686449556014765641,  0.48686449556014765641,  0.48686449556014765641, -0.48686449556014765641,  0.00000000000000000000;...
      %    -0.48686449556014765641, -0.48686449556014765641,  0.48686449556014765641,  0.48686449556014765641,  0.00000000000000000000;...
      %    +0.16666666666666666667,  0.16666666666666666667,  0.16666666666666666667,  0.16666666666666666667,  0.00000000000000000000];
      %  FE.QW = [...
      %    +0.21093750000000000000,  0.21093750000000000000,  0.21093750000000000000,  0.21093750000000000000,  0.15625000000000000000];
      %case {2}
      %  FE.QP = [...
      %    -0.26318405556971359557,  0.26318405556971359557,  0.26318405556971359557, -0.26318405556971359557, -0.50661630334978742377,  0.50661630334978742377,  0.50661630334978742377, -0.50661630334978742377;...
      %    -0.26318405556971359557, -0.26318405556971359557,  0.26318405556971359557,  0.26318405556971359557, -0.50661630334978742377, -0.50661630334978742377,  0.50661630334978742377,  0.50661630334978742377;...
      %    +0.54415184401122528880,  0.54415184401122528880,  0.54415184401122528880,  0.54415184401122528880,  0.12251482265544137787,  0.12251482265544137787,  0.12251482265544137787,  0.12251482265544137787];
      %  FE.QW = [...
      %    0.075589411559869072938,  0.075589411559869072938, 0.075589411559869072938, 0.075589411559869072938,  0.17441058844013092706,  0.17441058844013092706,  0.17441058844013092706,  0.17441058844013092706];
      %case {3}
      %  FE.QP = [...
      %    -0.38510399211870384331 ,  0.38510399211870384331 ,  0.38510399211870384331 , -0.38510399211870384331 , -0.40345831960728204766 ,  0.40345831960728204766 ,  0.00000000000000000000 ,  0.00000000000000000000 , -0.53157877436961973359,  0.53157877436961973359,  0.53157877436961973359, -0.53157877436961973359,  0.00000000000000000000;...
      %    -0.38510399211870384331 , -0.38510399211870384331 ,  0.38510399211870384331 ,  0.38510399211870384331 ,  0.00000000000000000000 ,  0.00000000000000000000 , -0.40345831960728204766 ,  0.40345831960728204766 , -0.53157877436961973359, -0.53157877436961973359,  0.53157877436961973359,  0.53157877436961973359,  0.00000000000000000000;...
      %    +0.428571428571428571429,  0.428571428571428571429,  0.428571428571428571429,  0.428571428571428571429,  0.33928571428571428571 ,  0.33928571428571428571 ,  0.33928571428571428571 ,  0.33928571428571428571 ,  0.08496732026143790850,  0.08496732026143790850,  0.08496732026143790850,  0.08496732026143790850,  0.76219701803768503595];
      %  FE.QW = [...
      %    +0.063061594202898550725,  0.063061594202898550725,  0.063061594202898550725,  0.063061594202898550725,  0.042101946815575556199,  0.042101946815575556199,  0.042101946815575556199,  0.042101946815575556199,  0.13172030707666776585,  0.13172030707666776585,  0.13172030707666776585,  0.13172030707666776585,  0.05246460761943250889];
    end
  case 'hexa'
    % *** HEXA QUADRATURE *************************************************
    switch o
      case 1    ,   FE1d = fe_init('line',1);
      case {2,3},   FE1d = fe_init('line',2);
      case {4,5},   FE1d = fe_init('line',3);
      case {6,7},   FE1d = fe_init('line',4);
      case {8,9},   FE1d = fe_init('line',5);
      otherwise
        error(' ... not programmed yet');
    end
    tmp = size(FE1d.QW,2);
    FE.QP  = [reshape(kron(FE1d.QP,ones(tmp)),[],1)  reshape(kron(ones(tmp),FE1d.QP),[],1)  reshape(FE1d.QP'.*ones(tmp,tmp^2),[],1)]';
    FE.QW  = (reshape(kron(FE1d.QW,ones(tmp)),[],1).*reshape(kron(ones(tmp),FE1d.QW),[],1).*reshape(FE1d.QW'.*ones(tmp,tmp^2),[],1))';
    FE.Cxi = [0;0;0]; 
end

% *************************************************************************
% *** SHAPE FUNCTIONS *****************************************************
% *************************************************************************
%  FE.d2Ndxi2 = d2N/dxi1^2   d2N/dxi2^2   d2N/dxi3^2   d2N/(dxi1*dxi2)   d2N/(dxi2*dxi3)   d2N/(dxi1*dxi3)
switch etype
  case 'line2'
    % *** LINE2 *******************************************************
    FE.N       = @(r) [  0.5*(1-r)   ;  0.5*(1+r)   ];
    FE.dNdxi   = @(r) [ -0.5+0*r     ;  0.5+0*r     ];
    FE.d2Ndxi2 = @(r) [      0*r     ;      0*r     ];
    FE.xi      =      [ -1           ;  1           ];
  case 'line3'
    % *** LINE3 *******************************************************
    FE.N       = @(r) [ -0.5*(1-r).*r;  (1-r).*(1+r);  0.5*(1+r).*r];
    FE.dNdxi   = @(r) [ -0.5+r       ; -2*r         ;  0.5+r       ];
    FE.d2Ndxi2 = @(r) [  1+0*r       ; -2+0*r       ;  1+0*r       ];
    FE.xi      =      [ -1           ;  0           ;  1           ];
  case 'line4'
    % *** LINE4 *******************************************************
    FE.N       = @(r) [ (-9*r.^3+ 9*r.^2+   r- 1)/16; (27*r.^3- 9*r.^2-27*r+ 9)/16; (-27*r.^3- 9*r.^2+27*r+ 9)/16; (9*r.^3+ 9*r.^2-   r- 1)/16];
    FE.dNdxi   = @(r) [ (       -27*r.^2+18*r+ 1)/16; (        81*r.^2-18*r-27)/16; (        -81*r.^2-18*r+27)/16; (       27*r.^2+18*r- 1)/16];
    FE.d2Ndxi2 = @(r) [ (               -54*r+18)/16; (               162*r-18)/16; (               -162*r-18)/16; (               54*r+18)/16];
    FE.xi      =      [                        -1   ;                        -1/3 ;                          1/3 ;                        1   ];
  case 'tria3'
    % *** TRIA3 *******************************************************
    FE.N       = @(r)      [...
      (1-(r(1,:)+r(2,:)));...
      r(1,:)              ;...
      r(2,:)              ];
    FE.dNdxi   = @(r)      [...
      -1+0*r(1,:),  -1+0*r(1,:);...
      +1+0*r(1,:),   0+0*r(1,:);...
      +0+0*r(1,:),   1+0*r(1,:)];
    FE.d2Ndxi2 = @(r)      [...
      +0+0*r(1,:),     0*r(1,:),     0*r(1,:);...
      +0+0*r(1,:),     0*r(1,:),     0*r(1,:);...
      +0+0*r(1,:),     0*r(1,:),     0*r(1,:)];
    FE.xi      =            [...
      0           ,     0        ;...
      1           ,     0        ;...
      0           ,     1        ];
  case 'tria6'
    % *** TRIA6 *******************************************************
    FE.N     = @(r)        [...
      (1-(r(1,:)+r(2,:))).*(1-2*(r(1,:)+r(2,:)));...
      r(1,:).*(2*r(1,:)-1)                      ;...
      r(2,:).*(2*r(2,:)-1)                      ;...
      4*r(1,:).*(1-(r(1,:)+r(2,:)))             ;...
      4*r(1,:).*r(2,:)                          ;...
      4*r(2,:).*(1-(r(1,:)+r(2,:)))             ];
    FE.dNdxi = @(r)        [...
      -3+4*r(1,:)+4*r(2,:),  -3+4*r(1,:)+4*r(2,:);...
      -1+4*r(1,:)         ,   0*r(1,:)           ;...
      +0*r(1,:)           ,  -1+4*r(2,:)         ;...
      +4-8*r(1,:)-4*r(2,:),  -4*r(1,:)           ;...
      +4*r(2,:)           ,   4*r(1,:)           ;...
      -4*r(2,:)           ,  +4-4*r(1,:)-8*r(2,:)];
    FE.d2Ndxi2 = @(r)      [...
      +4+0*r(1,:),   4+0*r(1,:),     4+0*r(1,:);...
      +4+0*r(1,:),     0*r(1,:),       0*r(1,:);...
      +0+0*r(1,:),   4+0*r(1,:),       0*r(1,:);...
      -8+0*r(1,:),     0*r(1,:),    -4+0*r(1,:);...
      +0+0*r(1,:),     0*r(1,:),     4+0*r(1,:);...
      +0+0*r(1,:),  -8+0*r(1,:),    -4+0*r(1,:)];
    FE.xi      =            [...
      0           ,     0        ;...
      1           ,     0        ;...
      0           ,     1        ;...
      0.5         ,     0        ;...
      0.5         ,     0.5      ;...
      0           ,     0.5      ];
    
  case 'quad4'
    % *** QUAD4 *******************************************************
    FE.N     = @(r) [...
      ((1-r(1,:)).*(1-r(2,:)))/4;...
      ((1+r(1,:)).*(1-r(2,:)))/4;...
      ((1+r(1,:)).*(1+r(2,:)))/4;...
      ((1-r(1,:)).*(1+r(2,:)))/4];
    FE.dNdxi = @(r) 0.25*[...
      -(1-r(2,:)), -(1-r(1,:));...
      +(1-r(2,:)), -(1+r(1,:));...
      +(1+r(2,:)), +(1+r(1,:));...
      -(1+r(2,:)), +(1-r(1,:))];
    FE.d2Ndxi2 = @(r)      [...
      +0+0*r(1,:),     0*r(1,:),  0.25+0*r(1,:);...
      +0+0*r(1,:),     0*r(1,:), -0.25+0*r(1,:);...
      +0+0*r(1,:),     0*r(1,:),  0.25+0*r(1,:);...
      +0+0*r(1,:),     0*r(1,:), -0.25+0*r(1,:)];
    FE.xi      =            [...
      -1          ,    -1        ;...
      +1          ,    -1        ;...
      +1          ,     1        ;...
      -1          ,     1        ];
  case 'quad8'
    % *** QUAD8 *******************************************************
    FE.N     = @(r) [...
      (-(1-r(1,:)).*(1-r(2,:)).*(1+r(1,:)+r(2,:)))/4;...
      (-(1+r(1,:)).*(1-r(2,:)).*(1-r(1,:)+r(2,:)))/4;...
      (-(1+r(1,:)).*(1+r(2,:)).*(1-r(1,:)-r(2,:)))/4;...
      (-(1-r(1,:)).*(1+r(2,:)).*(1+r(1,:)-r(2,:)))/4;...
      ( (1-r(1,:)).*(1-r(2,:)).*(1+r(1,:)       ))/2;...
      ( (1+r(1,:)).*(1-r(2,:)).*(1+r(2,:)       ))/2;...
      ( (1+r(1,:)).*(1+r(2,:)).*(1-r(1,:)       ))/2;...
      ( (1-r(1,:)).*(1+r(2,:)).*(1-r(2,:)       ))/2];
    FE.dNdxi = @(r) [...
      ( (r(2,:)+2*r(1,:)).*(1-r(2,:)))/4, ( (r(1,:)+2*r(2,:)).*(1-r(1,:)))/4;...
      (-(r(2,:)-2*r(1,:)).*(1-r(2,:)))/4, (-(r(1,:)-2*r(2,:)).*(1+r(1,:)))/4;...
      ( (r(2,:)+2*r(1,:)).*(1+r(2,:)))/4, ( (r(1,:)+2*r(2,:)).*(1+r(1,:)))/4;...
      (-(r(2,:)-2*r(1,:)).*(1+r(2,:)))/4, (-(r(1,:)-2*r(2,:)).*(1-r(1,:)))/4;...
      (-(         r(1,:)).*(1-r(2,:)))  , (-(       1-r(1,:)).*(1+r(1,:)))/2;...
      (+(       1-r(2,:)).*(1+r(2,:)))/2, (-(         r(2,:)).*(1+r(1,:)))  ;...
      (-(         r(1,:)).*(1+r(2,:)))  , ( (       1-r(1,:)).*(1+r(1,:)))/2;...
      (-(       1-r(2,:)).*(1+r(2,:)))/2, (-(         r(2,:)).*(1-r(1,:)))  ];
    FE.d2Ndxi2 = @(r)      [...
      ( 1-r(2,:))/2,  ( 1-r(1,:))/2, (+1+2*(-r(1,:)-r(2,:)))/4;...
      ( 1-r(2,:))/2,  ( 1+r(1,:))/2, (-1+2*(-r(1,:)+r(2,:)))/4;...
      ( 1+r(2,:))/2,  ( 1+r(1,:))/2, (+1+2*(+r(1,:)+r(2,:)))/4;...
      ( 1+r(2,:))/2,  ( 1-r(1,:))/2, (-1+2*(+r(1,:)-r(2,:)))/4;...
      (-1+r(2,:))  ,  ( 0*r(1,:))  ,  r(1,:)                  ;...
      ( 0*r(2,:))  ,  (-1-r(1,:))  , -r(2,:)                  ;...
      (-1-r(2,:))  ,  ( 0*r(1,:))  , -r(1,:)                  ;...
      ( 0*r(2,:))  ,  (-1+r(1,:))  ,  r(2,:)                  ];
    FE.xi      =            [...
      -1          ,    -1        ;...
      +1          ,    -1        ;...
      +1          ,     1        ;...
      -1          ,     1        ;...
      +0          ,    -1        ;...
      +1          ,     0        ;...
      +0          ,     1        ;...
      -1          ,     0        ];
  case 'quad9'
    % *** QUAD9 *******************************************************
    FE.N     = @(r) [...
      +0.25*(1-r(1,:)).*r(1,:).*            (1-r(2,:)).*r(2,:)            ;...
      -0.25*            r(1,:).*(1+r(1,:)).*(1-r(2,:)).*r(2,:)            ;...
      +0.25*            r(1,:).*(1+r(1,:)).*            r(2,:).*(1+r(2,:));...
      -0.25*(1-r(1,:)).*r(1,:).*                        r(2,:).*(1+r(2,:));...
      -0.5 *(1-r(1,:)).*        (1+r(1,:)).*(1-r(2,:)).*r(2,:)            ;...
      +0.5 *            r(1,:).*(1+r(1,:)).*(1-r(2,:))        .*(1+r(2,:));...
      +0.5 *(1-r(1,:)).*        (1+r(1,:)).*            r(2,:).*(1+r(2,:));...
      -0.5 *(1-r(1,:)).*r(1,:).*            (1-r(2,:)).*        (1+r(2,:));...
      +1   *(1-r(1,:)).*        (1+r(1,:)).*(1-r(2,:))        .*(1+r(2,:))];
    FE.dNdxi = @(r) [...
      +0.25*(1-2*r(1,:)).*(1-r(2,:)).*r(2,:)            , +0.25*(1-r(1,:)).*r(1,:).*            (1-2*r(2,:));...
      -0.25*(1+2*r(1,:)).*(1-r(2,:)).*r(2,:)            , -0.25*            r(1,:).*(1+r(1,:)).*(1-2*r(2,:));...
      +0.25*(1+2*r(1,:)).*            r(2,:).*(1+r(2,:)), +0.25*            r(1,:).*(1+r(1,:)).*(1+2*r(2,:));...
      -0.25*(1-2*r(1,:)).*            r(2,:).*(1+r(2,:)), -0.25*(1-r(1,:)).*r(1,:).*            (1+2*r(2,:));...
      +1   *     r(1,:) .*(1-r(2,:)).*r(2,:)            , -0.5 *(1-r(1,:)).*        (1+r(1,:)).*(1-2*r(2,:));...
      +0.5 *(1+2*r(1,:)).*(1-r(2,:)).*        (1+r(2,:)), -1   *            r(1,:).*(1+r(1,:)).*     r(2,:) ;...
      -1   *     r(1,:) .*            r(2,:).*(1+r(2,:)), +0.5 *(1-r(1,:)).*        (1+r(1,:)).*(1+2*r(2,:));...
      -0.5 *(1-2*r(1,:)).*(1-r(2,:)).*        (1+r(2,:)), +1   *(1-r(1,:)).*r(1,:).*                 r(2,:) ;...
      -2   *     r(1,:) .*(1-r(2,:)).*        (1+r(2,:)), -2   *(1-r(1,:)).*        (1+r(1,:)).*     r(2,:) ];
    FE.d2Ndxi2 = @(r)      [...
      ( r(2,:).^2-r(2,:))/2, ( r(1,:).^2-r(1,:))/2,  ((1-2*r(1,:)).*(1-2*r(2,:)))/4;...
      ( r(2,:).^2-r(2,:))/2, ( r(1,:).^2+r(1,:))/2, -((1+2*r(1,:)).*(1-2*r(2,:)))/4;...
      ( r(2,:).^2+r(2,:))/2, ( r(1,:).^2+r(1,:))/2,  ((1+2*r(1,:)).*(1+2*r(2,:)))/4;...
      ( r(2,:).^2+r(2,:))/2, ( r(1,:).^2-r(1,:))/2, -((1-2*r(1,:)).*(1+2*r(2,:)))/4;...
      (-r(2,:).^2+r(2,:))  , (-r(1,:).^2+ 1    )  ,   (    r(1,:)).*(1-2*r(2,:))   ;...
      (-r(2,:).^2+ 1    )  , (-r(1,:).^2-r(1,:))  ,  -(1+2*r(1,:)).*(    r(2,:))   ;...
      (-r(2,:).^2-r(2,:))  , (-r(1,:).^2+ 1    )  ,  -(    r(1,:)).*(1+2*r(2,:))   ;...
      (-r(2,:).^2+ 1    )  , (-r(1,:).^2+r(1,:))  ,   (1-2*r(1,:)).*(    r(2,:))   ;...
      ( r(2,:).^2- 1    )*2, ( r(1,:).^2- 1    )*2,  4*r(1,:).*r(2,:)              ];
    FE.xi      =            [...
      -1          ,    -1        ;...
      +1          ,    -1        ;...
      +1          ,     1        ;...
      -1          ,     1        ;...
      +0          ,    -1        ;...
      +1          ,     0        ;...
      +0          ,     1        ;...
      -1          ,     0        ;...
      +0          ,     0        ];
  case 'tetr4'
    % *** TETR4 *******************************************************
    FE.N     = @(r) [...
      r(1,:);
      r(2,:);
      r(3,:);
      1-(r(1,:)+r(2,:)+r(3,:))];
    FE.dNdxi = @(r) [...
      0*r(1,:)+1,   0*r(1,:)  ,   0*r(1,:)  ;...
      0*r(1,:)  ,   0*r(1,:)+1,   0*r(1,:)  ;...
      0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)+1;...
      0*r(1,:)-1,   0*r(1,:)-1,   0*r(1,:)-1];
    FE.d2Ndxi2 = @(r)      [...
      0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ;...
      0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ;...
      0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ;...
      0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ];
    FE.xi      =            [...
      1          ,    0          ,    0;...
      0          ,    1          ,    0;...
      0          ,    0          ,    1;...
      0          ,    0          ,    0];
  case 'tetr10'
    % *** TETR10 ******************************************************
    FE.N     = @(r) [...
      +  r(1,:).*(2*r(1,:) - 1);...
      +  r(2,:).*(2*r(2,:) - 1);...
      +  r(3,:).*(2*r(3,:) - 1);...
      (2*r(1,:) + 2*r(2,:) + 2*r(3,:) - 1).*(r(1,:) + r(2,:) + r(3,:) - 1);...
      +4*r(1,:).*             r(2,:)               ;...
      +4*                     r(2,:).*  r(3,:)     ;...
      +4*r(1,:).*                       r(3,:)     ;...
      -4*r(1,:).*(  r(1,:) +  r(2,:) +  r(3,:) - 1);...
      -4*r(2,:).*(  r(1,:) +  r(2,:) +  r(3,:) - 1);...
      -4*r(3,:).*(  r(1,:) +  r(2,:) +  r(3,:) - 1)];
    FE.dNdxi = @(r) [...
      (+4*r(1,:)                  -1), ( 0*r(1,:)                    ), ( 0*r(1,:)                    );...
      (+0*r(1,:)                    ), (          4*r(2,:)-1         ), ( 0*r(1,:)                    );...
      (+0*r(1,:)                    ), ( 0*r(1,:)                    ), (                   4*r(3,:)-1);...
      (+4*r(1,:)+4*r(2,:)+4*r(3,:)-3), ( 4*r(1,:)+4*r(2,:)+4*r(3,:)-3), ( 4*r(1,:)+4*r(2,:)+4*r(3,:)-3);...
      (+0*r(1,:)+4*r(2,:)           ), ( 4*r(1,:)                    ), ( 0*r(1,:)                    );...
      (+0*r(1,:)                    ), (                   4*r(3,:)  ), (          4*r(2,:)           );...
      (+0*r(1,:)         +4*r(3,:)  ), ( 0*r(1,:)                    ), ( 4*r(1,:)                    );...
      (-8*r(1,:)-4*r(2,:)-4*r(3,:)+4), (-4*r(1,:)                    ), (-4*r(1,:)                    );...
      (+0*r(1,:)-4*r(2,:)           ), (-4*r(1,:)-8*r(2,:)-4*r(3,:)+4), (         -4*r(2,:)           );...
      (+0*r(1,:)         -4*r(3,:)  ), (                  -4*r(3,:)  ), (-4*r(1,:)-4*r(2,:)-8*r(3,:)+4)];
    FE.d2Ndxi2 = @(r)      [...
      0*r(1,:)+4,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ;...
      0*r(1,:)  ,   0*r(1,:)+4,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ;...
      0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)+4,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ;...
      0*r(1,:)+4,   0*r(1,:)+4,   0*r(1,:)+4,   0*r(1,:)+4,   0*r(1,:)+4,   0*r(1,:)+4;...
      0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)+4,   0*r(1,:)  ,   0*r(1,:)  ;...
      0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)+4,   0*r(1,:)  ;...
      0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)+4;...
      0*r(1,:)-8,   0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)-4,   0*r(1,:)  ,   0*r(1,:)-4;...
      0*r(1,:)  ,   0*r(1,:)-8,   0*r(1,:)  ,   0*r(1,:)-4,   0*r(1,:)-4,   0*r(1,:)  ;...
      0*r(1,:)  ,   0*r(1,:)  ,   0*r(1,:)-8,   0*r(1,:)  ,   0*r(1,:)-4,   0*r(1,:)-4];
    FE.xi      =            [...
      1          ,    0          ,    0  ;...
      0          ,    1          ,    0  ;...
      0          ,    0          ,    1  ;...
      0          ,    0          ,    0  ;...
      0.5        ,    0.5        ,    0  ;...  
      0          ,    0.5        ,    0.5;...  
      0.5        ,    0          ,    0.5;...  
      0.5        ,    0          ,    0  ;...  
      0          ,    0.5        ,    0  ;...
      0          ,    0          ,    0.5];
  case 'pris6'
    % *** PRIS6  ******************************************************
    FE.N     = @(r) [...
      ((1-r(3,:))                .*(1-r(1,:)-r(2,:)))/2;...
      ((1-r(3,:)).*r(1,:)                           )/2;...
      ((1-r(3,:))        .*r(2,:)                   )/2;...
      ((1+r(3,:))                .*(1-r(1,:)-r(2,:)))/2;...
      ((1+r(3,:)).*r(1,:)                           )/2;...
      ((1+r(3,:))        .*r(2,:)                   )/2];
    FE.dNdxi = @(r) [...
      (-(1-r(3,:)))/2,  (-(1-r(3,:)))/2, ( r(1,:)+r(2,:)-1)/2;... 
      ( (1-r(3,:)))/2,  (  0*r(1,:) )  , (-r(1,:)         )/2;... 
      (  0*r(1,:) )  ,  ( (1-r(3,:)))/2, (       -r(2,:)  )/2;... 
      (-(1+r(3,:)))/2,  (-(1+r(3,:)))/2, (-r(1,:)-r(2,:)+1)/2;... 
      ( (1+r(3,:)))/2,  (  0*r(1,:) )  , ( r(1,:)         )/2;... 
      (  0*r(1,:) )  ,  ( (1+r(3,:)))/2, (        r(2,:)  )/2];
    FE.xi      =            [...
      0  ,   0  ,   -1;...
      1  ,   0  ,   -1;...
      0  ,   1  ,   -1;...
      0  ,   0  ,    1;...
      1  ,   0  ,    1;...
      0  ,   1  ,    1];
  case 'pris15'
    % *** PRIS15 ******************************************************
    FE.N     = @(r) [...
      (-                 (1-r(1,:)-r(2,:)).*(1-r(3,:)   ).*(2*r(1,:)+2*r(2,:)+r(3,:)  ))/2;... % 1
      (  r(1,:)                           .*(1-r(3,:)   ).*(2*r(1,:)         -r(3,:)-2))/2;... % 2
      (          r(2,:)                   .*(1-r(3,:)   ).*(         2*r(2,:)-r(3,:)-2))/2;... % 3
      (-                 (1-r(1,:)-r(2,:)).*(1+r(3,:)   ).*(2*r(1,:)+2*r(2,:)-r(3,:)  ))/2;... % 4
      (  r(1,:)                           .*(1+r(3,:)   ).*(2*r(1,:)         +r(3,:)-2))/2;... % 5
      (          r(2,:)                   .*(1+r(3,:)   ).*(2*r(2,:)         +r(3,:)-2))/2;... % 6
      (2*r(1,:)        .*(1-r(1,:)-r(2,:)).*(1-r(3,:)   )                              )  ;... % 7
      (2*r(1,:).*r(2,:)                   .*(1-r(3,:)   )                              )  ;... % 8
      (2        *r(2,:).*(1-r(1,:)-r(2,:)).*(1-r(3,:)   )                              )  ;... % 9
      (2*r(1,:)        .*(1-r(1,:)-r(2,:)).*(1+r(3,:)   )                              )  ;... %10
      (2*r(1,:).*r(2,:)                   .*(1+r(3,:)   )                              )  ;... %11
      (2        *r(2,:).*(1-r(1,:)-r(2,:)).*(1+r(3,:)   )                              )  ;... %12
      (                  (1-r(1,:)-r(2,:)).*(1-r(3,:).^2)                              )  ;... %13
      (  r(1,:)                           .*(1-r(3,:).^2)                              )  ;... %14
      (          r(2,:)                   .*(1-r(3,:).^2)                              )  ];   %15
    FE.dNdxi = @(r) [...
      (-  (r(3,:)    - 1).*( 4*r(1,:) + 4*r(2,:) + r(3,:) - 2))/2,      (-  (r(3,:)    - 1).*(4*r(1,:) + 4*r(2,:) + r(3,:) - 2))/2,  (-                  (r(1,:) + r(2,:) - 1).*( 2*r(1,:) + 2*r(2,:) + 2*r(3,:) - 1))/2;...
      (   (r(3,:)    - 1).*(-4*r(1,:)            + r(3,:) + 2))/2,      (  0*r(1,:)                                            )  ,  (   r(1,:)                               .*(-2*r(1,:)            + 2*r(3,:) + 1))/2;...
      ( 0*r(1,:)                                              )  ,      (   (r(3,:)    - 1).*(         - 4*r(2,:) + r(3,:) + 2))/2,  (           r(2,:)                       .*(          - 2*r(2,:) + 2*r(3,:) + 1))/2;...
      (   (r(3,:)    + 1).*( 4*r(1,:) + 4*r(2,:) - r(3,:) - 2))/2,      (   (r(3,:)    + 1).*(4*r(1,:) + 4*r(2,:) - r(3,:) - 2))/2,  (                   (r(1,:) + r(2,:) - 1).*( 2*r(1,:) + 2*r(2,:) - 2*r(3,:) - 1))/2;...
      (   (r(3,:)    + 1).*( 4*r(1,:)            + r(3,:) - 2))/2,      (  0*r(1,:)                                            )  ,  (   r(1,:)                               .*( 2*r(1,:)            + 2*r(3,:) - 1))/2;...
      ( 0*r(1,:)                                              )  ,      (   (r(3,:)    + 1).*(           4*r(2,:) + r(3,:) - 2))/2,  (           r(2,:)                       .*(            2*r(2,:) + 2*r(3,:) - 1))/2;...
      ( 2*(r(3,:)    - 1).*( 2*r(1,:) +   r(2,:)          - 1))  ,      ( 2*(r(3,:)    - 1).*(  r(1,:)                        ))  ,  ( 2*r(1,:)        .*(r(1,:) + r(2,:) - 1)                                       )  ;...
      (-2*(r(3,:)    - 1).*(              r(2,:)             ))  ,      (-2*(r(3,:)    - 1).*(  r(1,:)                        ))  ,  (-2*r(1,:).*r(2,:)                                                              )  ;...
      ( 2*(r(3,:)    - 1).*(              r(2,:)             ))  ,      ( 2*(r(3,:)    - 1).*(  r(1,:) + 2*r(2,:)          - 1))  ,  ( 2        *r(2,:).*(r(1,:) + r(2,:) - 1)                                       )  ;...
      (-2*(r(3,:)    + 1).*( 2*r(1,:) +   r(2,:)          - 1))  ,      (-2*(r(3,:)    + 1).*(  r(1,:)                        ))  ,  (-2*r(1,:)        .*(r(1,:) + r(2,:) - 1)                                       )  ;...
      ( 2*(r(3,:)    + 1).*(              r(2,:)             ))  ,      ( 2*(r(3,:)    + 1).*(  r(1,:)                        ))  ,  ( 2*r(1,:).*r(2,:)                                                              )  ;...
      (-2*(r(3,:)    + 1).*(              r(2,:)             ))  ,      (-2*(r(3,:)    + 1).*(  r(1,:) + 2*r(2,:)          - 1))  ,  (-2        *r(2,:).*(r(1,:) + r(2,:) - 1)                                       )  ;...
      (   (r(3,:).^2 - 1)                                     )  ,      (   (r(3,:).^2 - 1)                                    )  ,  ( 2                *(r(1,:) + r(2,:) - 1).*(                         r(3,:)    ))  ;...
      (  -(r(3,:).^2 - 1)                                     )  ,      (  0*r(1,:)                                            )  ,  (-2*r(1,:)                               .*(                         r(3,:)    ))  ;...
      (0*r(1,:)                                               )  ,      (-  (r(3,:).^2 - 1)                                    )  ,  (-2        *r(2,:)                       .*(                         r(3,:)    ))  ];
    FE.xi      =            [...
      0  ,   0  ,   -1;...
      1  ,   0  ,   -1;...
      0  ,   1  ,   -1;...
      0  ,   0  ,    1;...
      1  ,   0  ,    1;...
      0  ,   1  ,    1;...
      1/2,   0  ,   -1;...
      1/2,   1/2,   -1;...
      0  ,   1/2,   -1;...
      1/2,   0  ,    1;...
      1/2,   1/2,    1;...
      0  ,   1/2,    1;...
      0  ,   0  ,    0;...
      1  ,   0  ,    0;...
      0  ,   1  ,    0];
  case 'pyra5'
    % *** PYRA5 *******************************************************
    FE.N       = @(r) [...
      ((-1-r(1,:)+r(2,:)+r(3,:)).*(-1-r(1,:)-r(2,:)+r(3,:)))./(4*(1-r(3,:)));...
      ((-1-r(1,:)-r(2,:)+r(3,:)).*(-1+r(1,:)-r(2,:)+r(3,:)))./(4*(1-r(3,:)));...
      ((-1+r(1,:)+r(2,:)+r(3,:)).*(-1+r(1,:)-r(2,:)+r(3,:)))./(4*(1-r(3,:)));...
      ((-1+r(1,:)+r(2,:)+r(3,:)).*(-1-r(1,:)+r(2,:)+r(3,:)))./(4*(1-r(3,:)));...
      r(3,:)];
    FE.dNdxi   = @(r) [...
      (-(r(1,:) - r(3,:) + 1)./(2*(r(3,:) - 1))), (  r(2,:)              ./(2*(r(3,:) - 1))), (-(- r(1,:).^2 + r(2,:).^2 + r(3,:).^2 - 2*r(3,:) + 1)./(4*(r(3,:) - 1).^2));...
      (  r(1,:)              ./(2*(r(3,:) - 1))), (-(r(2,:) - r(3,:) + 1)./(2*(r(3,:) - 1))), (-(  r(1,:).^2 - r(2,:).^2 + r(3,:).^2 - 2*r(3,:) + 1)./(4*(r(3,:) - 1).^2));...
      (-(r(1,:) + r(3,:) - 1)./(2*(r(3,:) - 1))), (  r(2,:)              ./(2*(r(3,:) - 1))), (-(- r(1,:).^2 + r(2,:).^2 + r(3,:).^2 - 2*r(3,:) + 1)./(4*(r(3,:) - 1).^2));...
      (  r(1,:)              ./(2*(r(3,:) - 1))), (-(r(2,:) + r(3,:) - 1)./(2*(r(3,:) - 1))), (-(  r(1,:).^2 - r(2,:).^2 + r(3,:).^2 - 2*r(3,:) + 1)./(4*(r(3,:) - 1).^2));...
      (0*r(1,:)                                ), (0*r(2,:)                                ), (                          0*r(3,:)+ 1                                     )];
    FE.d2Ndxi2 = @(r) [...
      (-1./(2*(r(3,:) - 1))), ( 1./(2*(r(3,:) - 1))), (-(r(1,:).^2 - r(2,:).^2)./(2*(r(3,:) - 1).^3)), (0*r(3,:)), (-r(2,:)./(2*(r(3,:) - 1).^2)), ( r(1,:)./(2*(r(3,:) - 1).^2));...
      ( 1./(2*(r(3,:) - 1))), (-1./(2*(r(3,:) - 1))), ( (r(1,:).^2 - r(2,:).^2)./(2*(r(3,:) - 1).^3)), (0*r(3,:)), ( r(2,:)./(2*(r(3,:) - 1).^2)), (-r(1,:)./(2*(r(3,:) - 1).^2));...
      (-1./(2*(r(3,:) - 1))), ( 1./(2*(r(3,:) - 1))), (-(r(1,:).^2 - r(2,:).^2)./(2*(r(3,:) - 1).^3)), (0*r(3,:)), (-r(2,:)./(2*(r(3,:) - 1).^2)), ( r(1,:)./(2*(r(3,:) - 1).^2));...
      ( 1./(2*(r(3,:) - 1))), (-1./(2*(r(3,:) - 1))), ( (r(1,:).^2 - r(2,:).^2)./(2*(r(3,:) - 1).^3)), (0*r(3,:)), ( r(2,:)./(2*(r(3,:) - 1).^2)), (-r(1,:)./(2*(r(3,:) - 1).^2));...
      (     0* r(3,:)      ), (     0* r(3,:)      ), (                           0* r(3,:)         ), (0*r(3,:)), (          0* r(3,:)         ), (          0* r(3,:)         )];
    FE.xi    =      [...
      +1,  0, 0;...
      +0,  1, 0;...
      -1,  0, 0;...
      +0, -1, 0;...
      +0,  0, 1];
    %FE.N     = @(r) [...
    %  (1-r(1,:)).*(1-r(2,:)).*(1-r(3,:))/4;...
    %  (1+r(1,:)).*(1-r(2,:)).*(1-r(3,:))/4;...
    %  (1+r(1,:)).*(1+r(2,:)).*(1-r(3,:))/4;...
    %  (1-r(1,:)).*(1+r(2,:)).*(1-r(3,:))/4;...
    %  r(3,:)];
    %FE.dNdxi = @(r) [...
    %  -(1-r(2,:)).*(1-r(3,:))/4, -(1-r(1,:)).*(1-r(3,:))/4 -(1-r(1,:)).*(1-r(2,:))/4;...
    %  +(1-r(2,:)).*(1-r(3,:))/4, -(1+r(1,:)).*(1-r(3,:))/4 -(1+r(1,:)).*(1-r(2,:))/4;...
    %  +(1+r(2,:)).*(1-r(3,:))/4, +(1+r(1,:)).*(1-r(3,:))/4 -(1+r(1,:)).*(1+r(2,:))/4;...
    %  -(1+r(2,:)).*(1-r(3,:))/4, +(1-r(1,:)).*(1-r(3,:))/4 -(1-r(1,:)).*(1+r(2,:))/4;...
    %  +0*r(1,:)                , 0*r(1,:)                , 1+0*r(1,:)];
    %FE.xi      =            [...
    %  -1 ,  -1  ,    0;...
    %  +1 ,  -1  ,    0;...
    %  +1 ,   1  ,    0;...
    %  -1 ,   1  ,    0;...
    %  +0 ,   0  ,    1];
  case 'pyra13'
    % *** PYRA13 ******************************************************
    FE.N       = @(r) [...
      ((-1-r(1,:)+r(2,:)+r(3,:)).*(-1-r(1,:)-r(2,:)+r(3,:)).*(-1/2+r(1,:)              )./(2*(1-r(3,:))));...
      ((-1-r(1,:)-r(2,:)+r(3,:)).*(-1+r(1,:)-r(2,:)+r(3,:)).*(-1/2       +r(2,:)       )./(2*(1-r(3,:))));...
      ((-1+r(1,:)-r(2,:)+r(3,:)).*(-1+r(1,:)+r(2,:)+r(3,:)).*(-1/2-r(1,:)              )./(2*(1-r(3,:))));...
      ((-1+r(1,:)+r(2,:)+r(3,:)).*(-1-r(1,:)+r(2,:)+r(3,:)).*(-1/2       -r(2,:)       )./(2*(1-r(3,:))));...
      (                                           2*r(3,:) .*(-1/2              +r(3,:))                );...
      ((-1-r(1,:)+r(2,:)+r(3,:)).*(-1-r(1,:)-r(2,:)+r(3,:)).*( 1  -r(1,:)+r(2,:)-r(3,:))./(2*(1-r(3,:))));...
      ((-1-r(1,:)-r(2,:)+r(3,:)).*(-1+r(1,:)-r(2,:)+r(3,:)).*( 1  -r(1,:)-r(2,:)-r(3,:))./(2*(1-r(3,:))));...
      ((-1+r(1,:)-r(2,:)+r(3,:)).*(-1+r(1,:)+r(2,:)+r(3,:)).*( 1  +r(1,:)-r(2,:)-r(3,:))./(2*(1-r(3,:))));...
      ((-1+r(1,:)+r(2,:)+r(3,:)).*(-1-r(1,:)+r(2,:)+r(3,:)).*( 1  +r(1,:)+r(2,:)-r(3,:))./(2*(1-r(3,:))));...
      ((-1-r(1,:)+r(2,:)+r(3,:)).*(-1-r(1,:)-r(2,:)+r(3,:)).*(                   r(3,:))./(   1-r(3,:) ));...
      ((-1-r(1,:)-r(2,:)+r(3,:)).*(-1+r(1,:)-r(2,:)+r(3,:)).*(                   r(3,:))./(   1-r(3,:) ));...
      ((-1+r(1,:)-r(2,:)+r(3,:)).*(-1+r(1,:)+r(2,:)+r(3,:)).*(                   r(3,:))./(   1-r(3,:) ));...
      ((-1+r(1,:)+r(2,:)+r(3,:)).*(-1-r(1,:)+r(2,:)+r(3,:)).*(                   r(3,:))./(   1-r(3,:) ))];
    FE.dNdxi   = @(r) [...
      ( ( -3*r(1,:).^2                    + 4*r(1,:).*r(3,:) - 3*r(1,:) + r(2,:).^2                               -   r(3,:).^2 +   r(3,:)    )./(2*(r(3,:) - 1))), ( (             2*r(1,:).*r(2,:)                                                                -   r(2,:)                             )./(2*(r(3,:) - 1))), ( ( 2*r(1,:).^3                        - r(1,:).^2 - 2*r(1,:).*r(2,:).^2 - 2*r(1,:).*r(3,:).^2 + 4*r(1,:).*r(3,:) - 2*r(1,:)               + r(2,:).^2                                                                   +   r(3,:).^2 - 2*r(3,:) + 1)./(4*(r(3,:) - 1).^2));...
      ( (                2*r(1,:).*r(2,:)                    -   r(1,:)                                                                       )./(2*(r(3,:) - 1))), ( ( r(1,:).^2                                                  - 3*r(2,:).^2 + 4*r(2,:).*r(3,:) - 3*r(2,:) -   r(3,:).^2 +   r(3,:)    )./(2*(r(3,:) - 1))), ( (             - 2*r(1,:).^2.*r(2,:)  + r(1,:).^2                                                                           + 2*r(2,:).^3 - r(2,:).^2 - 2*r(2,:).*r(3,:).^2 + 4*r(2,:).*r(3,:) - 2*r(2,:)               +   r(3,:).^2 - 2*r(3,:) + 1)./(4*(r(3,:) - 1).^2));...
      ( (  3*r(1,:).^2                    + 4*r(1,:).*r(3,:) - 3*r(1,:) - r(2,:).^2                               +   r(3,:).^2 -   r(3,:)    )./(2*(r(3,:) - 1))), ( (           - 2*r(1,:).*r(2,:)                                                                -   r(2,:)                             )./(2*(r(3,:) - 1))), ( (-2*r(1,:).^3                        - r(1,:).^2 + 2*r(1,:).*r(2,:).^2 + 2*r(1,:).*r(3,:).^2 - 4*r(1,:).*r(3,:) + 2*r(1,:)               + r(2,:).^2                                                                   +   r(3,:).^2 - 2*r(3,:) + 1)./(4*(r(3,:) - 1).^2));...
      ( (              - 2*r(1,:).*r(2,:)                    -   r(1,:)                                                                       )./(2*(r(3,:) - 1))), ( (-r(1,:).^2                                                  + 3*r(2,:).^2 + 4*r(2,:).*r(3,:) - 3*r(2,:) +   r(3,:).^2 -   r(3,:)    )./(2*(r(3,:) - 1))), ( (               2*r(1,:).^2.*r(2,:)  + r(1,:).^2                                                                           - 2*r(2,:).^3 - r(2,:).^2 + 2*r(2,:).*r(3,:).^2 - 4*r(2,:).*r(3,:) + 2*r(2,:)               +   r(3,:).^2 - 2*r(3,:) + 1)./(4*(r(3,:) - 1).^2));...
      (                                                                                                                                           0* r(3,:)      ), (                                                                                                                                          0* r(3,:)      ), (                                                                                                                                                                                                                                                        4* r(3,:) - 1     );...
      ( (  3*r(1,:).^2 - 2*r(1,:).*r(2,:) - 2*r(1,:).*r(3,:) + 2*r(1,:) - r(2,:).^2 + 2*r(2,:).*r(3,:) - 2*r(2,:) -   r(3,:).^2 + 2*r(3,:) - 1)./(2*(r(3,:) - 1))), ( (-r(1,:).^2 - 2*r(1,:).*r(2,:) + 2*r(1,:).*r(3,:) - 2*r(1,:) + 3*r(2,:).^2 - 2*r(2,:).*r(3,:) + 2*r(2,:) -   r(3,:).^2 + 2*r(3,:) - 1)./(2*(r(3,:) - 1))), ( (-  r(1,:).^3 +   r(1,:).^2.*r(2,:)              +   r(1,:).*r(2,:).^2 -   r(1,:).*r(3,:).^2 + 2*r(1,:).*r(3,:) -   r(1,:) -   r(2,:).^3             -   r(2,:).*r(3,:).^2 + 2*r(2,:).*r(3,:) -   r(2,:) + 2*r(3,:).^3 - 6*r(3,:).^2 + 6*r(3,:) - 2)./(2*(r(3,:) - 1).^2));...
      ( (- 3*r(1,:).^2 - 2*r(1,:).*r(2,:) - 2*r(1,:).*r(3,:) + 2*r(1,:) + r(2,:).^2 - 2*r(2,:).*r(3,:) + 2*r(2,:) +   r(3,:).^2 - 2*r(3,:) + 1)./(2*(r(3,:) - 1))), ( (-r(1,:).^2 + 2*r(1,:).*r(2,:) - 2*r(1,:).*r(3,:) + 2*r(1,:) + 3*r(2,:).^2 - 2*r(2,:).*r(3,:) + 2*r(2,:) -   r(3,:).^2 + 2*r(3,:) - 1)./(2*(r(3,:) - 1))), ( (   r(1,:).^3 +   r(1,:).^2.*r(2,:)              -   r(1,:).*r(2,:).^2 +   r(1,:).*r(3,:).^2 - 2*r(1,:).*r(3,:) +   r(1,:) -   r(2,:).^3             -   r(2,:).*r(3,:).^2 + 2*r(2,:).*r(3,:) -   r(2,:) + 2*r(3,:).^3 - 6*r(3,:).^2 + 6*r(3,:) - 2)./(2*(r(3,:) - 1).^2));...
      ( (- 3*r(1,:).^2 + 2*r(1,:).*r(2,:) - 2*r(1,:).*r(3,:) + 2*r(1,:) + r(2,:).^2 + 2*r(2,:).*r(3,:) - 2*r(2,:) +   r(3,:).^2 - 2*r(3,:) + 1)./(2*(r(3,:) - 1))), ( ( r(1,:).^2 + 2*r(1,:).*r(2,:) + 2*r(1,:).*r(3,:) - 2*r(1,:) - 3*r(2,:).^2 - 2*r(2,:).*r(3,:) + 2*r(2,:) +   r(3,:).^2 - 2*r(3,:) + 1)./(2*(r(3,:) - 1))), ( (   r(1,:).^3 -   r(1,:).^2.*r(2,:)              -   r(1,:).*r(2,:).^2 +   r(1,:).*r(3,:).^2 - 2*r(1,:).*r(3,:) +   r(1,:) +   r(2,:).^3             +   r(2,:).*r(3,:).^2 - 2*r(2,:).*r(3,:) +   r(2,:) + 2*r(3,:).^3 - 6*r(3,:).^2 + 6*r(3,:) - 2)./(2*(r(3,:) - 1).^2));...
      (   (3*r(1,:).^2 + 2*r(1,:).*r(2,:) - 2*r(1,:).*r(3,:) + 2*r(1,:) - r(2,:).^2 - 2*r(2,:).*r(3,:) + 2*r(2,:) -   r(3,:).^2 + 2*r(3,:) - 1)./(2*(r(3,:) - 1))), ( ( r(1,:).^2 - 2*r(1,:).*r(2,:) - 2*r(1,:).*r(3,:) + 2*r(1,:) - 3*r(2,:).^2 - 2*r(2,:).*r(3,:) + 2*r(2,:) +   r(3,:).^2 - 2*r(3,:) + 1)./(2*(r(3,:) - 1))), ( (-  r(1,:).^3 -   r(1,:).^2.*r(2,:)              +   r(1,:).*r(2,:).^2 -   r(1,:).*r(3,:).^2 + 2*r(1,:).*r(3,:) -   r(1,:) +   r(2,:).^3             +   r(2,:).*r(3,:).^2 - 2*r(2,:).*r(3,:) +   r(2,:) + 2*r(3,:).^3 - 6*r(3,:).^2 + 6*r(3,:) - 2)./(2*(r(3,:) - 1).^2));...
      ( (                                 - 2*r(1,:).*r(3,:)                                                      + 2*r(3,:).^2 - 2*r(3,:)    )./(   r(3,:) - 1 )), ( (                                                                            2*r(2,:).*r(3,:)                                        )./(   r(3,:) - 1 )), ( (                                      r(1,:).^2                       + 2*r(1,:).*r(3,:).^2 - 4*r(1,:).*r(3,:) + 2*r(1,:)               - r(2,:).^2                                                     - 2*r(3,:).^3 + 5*r(3,:).^2 - 4*r(3,:) + 1)./(  (r(3,:) - 1).^2));...
      ( (                                   2*r(1,:).*r(3,:)                                                                                  )./(   r(3,:) - 1 )), ( (                                                                          - 2*r(2,:).*r(3,:)            + 2*r(3,:).^2 - 2*r(3,:)    )./(   r(3,:) - 1 )), ( (                                    - r(1,:).^2                                                                                         + r(2,:).^2 + 2*r(2,:).*r(3,:).^2 - 4*r(2,:).*r(3,:) + 2*r(2,:) - 2*r(3,:).^3 + 5*r(3,:).^2 - 4*r(3,:) + 1)./(  (r(3,:) - 1).^2));...
      ( (                                  -2*r(1,:).*r(3,:)                                                      - 2*r(3,:).^2 + 2*r(3,:)    )./(   r(3,:) - 1 )), ( (                                                                            2*r(2,:).*r(3,:)                                        )./(   r(3,:) - 1 )), ( (                                      r(1,:).^2                       - 2*r(1,:).*r(3,:).^2 + 4*r(1,:).*r(3,:) - 2*r(1,:)               - r(2,:).^2                                                     - 2*r(3,:).^3 + 5*r(3,:).^2 - 4*r(3,:) + 1)./(  (r(3,:) - 1).^2));...
      ( (                                   2*r(1,:).*r(3,:)                                                                                  )./(   r(3,:) - 1 )), ( (                                                                          - 2*r(2,:).*r(3,:)            - 2*r(3,:).^2 + 2*r(3,:)    )./(   r(3,:) - 1 )), ( (                                    - r(1,:).^2                                                                                         + r(2,:).^2 - 2*r(2,:).*r(3,:).^2 + 4*r(2,:).*r(3,:) - 2*r(2,:) - 2*r(3,:).^3 + 5*r(3,:).^2 - 4*r(3,:) + 1)./(  (r(3,:) - 1).^2))];
    FE.d2Ndxi2 = @(r) [];
    FE.xi    =      [...
      +1  ,  0  , 0  ;...
      +0  ,  1  , 0  ;...
      -1  ,  0  , 0  ;...
      +0  , -1  , 0  ;...
      +0  ,  0  , 1  ;...
      +1/2,  1/2, 0  ;...
      -1/2,  1/2, 0  ;...
      -1/2, -1/2, 0  ;...
      +1/2, -1/2, 0  ;...
      +1/2,    0, 1/2;...
      +1/2,  1/2  1/2;...
      -1/2,    0, 1/2;...
      +0  , -1/2, 1/2];
  case 'hexa8'
    % *** HEXA8 *******************************************************
    FE.N     = @(r) [...
      -(r(1,:) - 1).*(r(2,:) - 1).*(r(3,:) - 1)/8;...
      +(r(1,:) + 1).*(r(2,:) - 1).*(r(3,:) - 1)/8;...
      -(r(1,:) + 1).*(r(2,:) + 1).*(r(3,:) - 1)/8;...
      +(r(1,:) - 1).*(r(2,:) + 1).*(r(3,:) - 1)/8;...
      +(r(1,:) - 1).*(r(2,:) - 1).*(r(3,:) + 1)/8;...
      -(r(1,:) + 1).*(r(2,:) - 1).*(r(3,:) + 1)/8;...
      +(r(1,:) + 1).*(r(2,:) + 1).*(r(3,:) + 1)/8;...
      -(r(1,:) - 1).*(r(2,:) + 1).*(r(3,:) + 1)/8];
    FE.dNdxi = @(r) [...
      -(r(2,:) - 1).*(r(3,:) - 1)/8,   -(r(1,:) - 1).*(r(3,:) - 1)/8,   -(r(1,:) - 1).*(r(2,:) - 1)/8;...
      +(r(2,:) - 1).*(r(3,:) - 1)/8,    (r(1,:) + 1).*(r(3,:) - 1)/8,    (r(1,:) + 1).*(r(2,:) - 1)/8;...
      -(r(2,:) + 1).*(r(3,:) - 1)/8,   -(r(1,:) + 1).*(r(3,:) - 1)/8,   -(r(1,:) + 1).*(r(2,:) + 1)/8;...
      +(r(2,:) + 1).*(r(3,:) - 1)/8,    (r(1,:) - 1).*(r(3,:) - 1)/8,    (r(1,:) - 1).*(r(2,:) + 1)/8;...
      +(r(2,:) - 1).*(r(3,:) + 1)/8,    (r(1,:) - 1).*(r(3,:) + 1)/8,    (r(1,:) - 1).*(r(2,:) - 1)/8;...
      -(r(2,:) - 1).*(r(3,:) + 1)/8,   -(r(1,:) + 1).*(r(3,:) + 1)/8,   -(r(1,:) + 1).*(r(2,:) - 1)/8;...
      +(r(2,:) + 1).*(r(3,:) + 1)/8,    (r(1,:) + 1).*(r(3,:) + 1)/8,    (r(1,:) + 1).*(r(2,:) + 1)/8;...
      -(r(2,:) + 1).*(r(3,:) + 1)/8,   -(r(1,:) - 1).*(r(3,:) + 1)/8,   -(r(1,:) - 1).*(r(2,:) + 1)/8];
    FE.d2Ndxi2 = @(r)      [...    
      0*r(1,:),   0*r(1,:),   0*r(1,:),   (-r(3,:) + 1)/8,   (-r(1,:) + 1)/8,   (-r(2,:) + 1)/8;...
      0*r(1,:),   0*r(1,:),   0*r(1,:),   ( r(3,:) - 1)/8,   ( r(1,:) + 1)/8,   ( r(2,:) - 1)/8;...
      0*r(1,:),   0*r(1,:),   0*r(1,:),   (-r(3,:) + 1)/8,   (-r(1,:) - 1)/8,   (-r(2,:) - 1)/8;...
      0*r(1,:),   0*r(1,:),   0*r(1,:),   ( r(3,:) - 1)/8,   ( r(1,:) - 1)/8,   ( r(2,:) + 1)/8;...
      0*r(1,:),   0*r(1,:),   0*r(1,:),   ( r(3,:) + 1)/8,   ( r(1,:) - 1)/8,   ( r(2,:) - 1)/8;...
      0*r(1,:),   0*r(1,:),   0*r(1,:),   (-r(3,:) - 1)/8,   (-r(1,:) - 1)/8,   (-r(2,:) + 1)/8;...
      0*r(1,:),   0*r(1,:),   0*r(1,:),   ( r(3,:) + 1)/8,   ( r(1,:) + 1)/8,   ( r(2,:) + 1)/8;...
      0*r(1,:),   0*r(1,:),   0*r(1,:),   (-r(3,:) - 1)/8,   (-r(1,:) + 1)/8,   (-r(2,:) - 1)/8];
    FE.xi      =            [...
      -1,   -1,   -1;...
      +1,   -1,   -1;...
      +1,   +1,   -1;...
      -1,   +1,   -1;...
      -1,   -1,   +1;...
      +1,   -1,   +1;...
      +1,   +1,   +1;...
      -1,   +1,   +1];
  case 'hexa20'
    % *** HEXA20 ******************************************************
    FE.N     = @(r) [...
      ((1 - r(1,:)   ).*(1 - r(2,:)   ).*(1 - r(3,:)   ).*( -2 - r(1,:) - r(2,:) - r(3,:)))/8;...
      ((1 + r(1,:)   ).*(1 - r(2,:)   ).*(1 - r(3,:)   ).*( -2 + r(1,:) - r(2,:) - r(3,:)))/8;...
      ((1 + r(1,:)   ).*(1 + r(2,:)   ).*(1 - r(3,:)   ).*( -2 + r(1,:) + r(2,:) - r(3,:)))/8;...
      ((1 - r(1,:)   ).*(1 + r(2,:)   ).*(1 - r(3,:)   ).*( -2 - r(1,:) + r(2,:) - r(3,:)))/8;...
      ((1 - r(1,:)   ).*(1 - r(2,:)   ).*(1 + r(3,:)   ).*( -2 - r(1,:) - r(2,:) + r(3,:)))/8;...
      ((1 + r(1,:)   ).*(1 - r(2,:)   ).*(1 + r(3,:)   ).*( -2 + r(1,:) - r(2,:) + r(3,:)))/8;...
      ((1 + r(1,:)   ).*(1 + r(2,:)   ).*(1 + r(3,:)   ).*( -2 + r(1,:) + r(2,:) + r(3,:)))/8;...
      ((1 - r(1,:)   ).*(1 + r(2,:)   ).*(1 + r(3,:)   ).*( -2 - r(1,:) + r(2,:) + r(3,:)))/8;...
      ((1 - r(1,:).^2).*(1 - r(2,:)   ).*(1 - r(3,:)   )                                  )/4;...
      ((1 + r(1,:)   ).*(1 - r(2,:).^2).*(1 - r(3,:)   )                                  )/4;...
      ((1 - r(1,:).^2).*(1 + r(2,:)   ).*(1 - r(3,:)   )                                  )/4;...
      ((1 - r(1,:)   ).*(1 - r(2,:).^2).*(1 - r(3,:)   )                                  )/4;...
      ((1 - r(1,:).^2).*(1 - r(2,:)   ).*(1 + r(3,:)   )                                  )/4;...
      ((1 + r(1,:)   ).*(1 - r(2,:).^2).*(1 + r(3,:)   )                                  )/4;...
      ((1 - r(1,:).^2).*(1 + r(2,:)   ).*(1 + r(3,:)   )                                  )/4;...
      ((1 - r(1,:)   ).*(1 - r(2,:).^2).*(1 + r(3,:)   )                                  )/4;...
      ((1 - r(1,:)   ).*(1 - r(2,:)   ).*(1 - r(3,:).^2)                                  )/4;...
      ((1 + r(1,:)   ).*(1 - r(2,:)   ).*(1 - r(3,:).^2)                                  )/4;...
      ((1 + r(1,:)   ).*(1 + r(2,:)   ).*(1 - r(3,:).^2)                                  )/4;...
      ((1 - r(1,:)   ).*(1 + r(2,:)   ).*(1 - r(3,:).^2)                                  )/4];  
    FE.dNdxi = @(r) [...
      ((1 - r(2,:)).*(1 - r(3,:)).*(+1 + 2*r(1,:) +   r(2,:) +   r(3,:)))/8,   ((1 - r(1,:)).*(1 - r(3,:)).*(+1 +   r(1,:) + 2*r(2,:) +   r(3,:)))/8,   ((1 - r(1,:)).*(1 - r(2,:)).*(+1 +   r(1,:) +   r(2,:) + 2*r(3,:)))/8;...
      ((1 - r(2,:)).*(1 - r(3,:)).*(-1 + 2*r(1,:) -   r(2,:) -   r(3,:)))/8,   ((1 + r(1,:)).*(1 - r(3,:)).*(+1 -   r(1,:) + 2*r(2,:) +   r(3,:)))/8,   ((1 + r(1,:)).*(1 - r(2,:)).*(+1 -   r(1,:) +   r(2,:) + 2*r(3,:)))/8;...
      ((1 + r(2,:)).*(1 - r(3,:)).*(-1 + 2*r(1,:) +   r(2,:) -   r(3,:)))/8,   ((1 + r(1,:)).*(1 - r(3,:)).*(-1 +   r(1,:) + 2*r(2,:) -   r(3,:)))/8,   ((1 + r(1,:)).*(1 + r(2,:)).*(+1 -   r(1,:) -   r(2,:) + 2*r(3,:)))/8;...
      ((1 + r(2,:)).*(1 - r(3,:)).*(+1 + 2*r(1,:) -   r(2,:) +   r(3,:)))/8,   ((1 - r(1,:)).*(1 - r(3,:)).*(-1 -   r(1,:) + 2*r(2,:) -   r(3,:)))/8,   ((1 - r(1,:)).*(1 + r(2,:)).*(+1 +   r(1,:) -   r(2,:) + 2*r(3,:)))/8;...
      ((1 - r(2,:)).*(1 + r(3,:)).*(+1 + 2*r(1,:) +   r(2,:) -   r(3,:)))/8,   ((1 - r(1,:)).*(1 + r(3,:)).*(+1 +   r(1,:) + 2*r(2,:) -   r(3,:)))/8,   ((1 - r(1,:)).*(1 - r(2,:)).*(-1 -   r(1,:) -   r(2,:) + 2*r(3,:)))/8;...
      ((1 - r(2,:)).*(1 + r(3,:)).*(-1 + 2*r(1,:) -   r(2,:) +   r(3,:)))/8,   ((1 + r(1,:)).*(1 + r(3,:)).*(+1 -   r(1,:) + 2*r(2,:) -   r(3,:)))/8,   ((1 + r(1,:)).*(1 - r(2,:)).*(-1 +   r(1,:) -   r(2,:) + 2*r(3,:)))/8;...
      ((1 + r(2,:)).*(1 + r(3,:)).*(-1 + 2*r(1,:) +   r(2,:) +   r(3,:)))/8,   ((1 + r(1,:)).*(1 + r(3,:)).*(-1 +   r(1,:) + 2*r(2,:) +   r(3,:)))/8,   ((1 + r(1,:)).*(1 + r(2,:)).*(-1 +   r(1,:) +   r(2,:) + 2*r(3,:)))/8;...
      ((1 + r(2,:)).*(1 + r(3,:)).*(+1 + 2*r(1,:) -   r(2,:) -   r(3,:)))/8,   ((1 - r(1,:)).*(1 + r(3,:)).*(-1 -   r(1,:) + 2*r(2,:) +   r(3,:)))/8,   ((1 - r(1,:)).*(1 + r(2,:)).*(-1 -   r(1,:) +   r(2,:) + 2*r(3,:)))/8;...
      (                        -r(1,:).*(1 - r(2,:)   ).*(1 - r(3,:)   ))/2,   (                                -(1 - r(1,:).^2).*(1 - r(3,:)   ))/4,   (                                -(1 - r(1,:).^2).*(1 - r(2,:)   ))/4;...
      (                                 (1 - r(2,:).^2).*(1 - r(3,:)   ))/4,   (                        -r(2,:).*(1 + r(1,:)   ).*(1 - r(3,:)   ))/2,   (                                -(1 + r(1,:)   ).*(1 - r(2,:).^2))/4;...
      (                        -r(1,:).*(1 + r(2,:)   ).*(1 - r(3,:)   ))/2,   (                                 (1 - r(1,:).^2).*(1 - r(3,:)   ))/4,   (                                -(1 - r(1,:).^2).*(1 + r(2,:)   ))/4;...
      (                                -(1 - r(2,:).^2).*(1 - r(3,:)   ))/4,   (                        -r(2,:).*(1 - r(1,:)   ).*(1 - r(3,:)   ))/2,   (                                -(1 - r(1,:)   ).*(1 - r(2,:).^2))/4;...
      (                        -r(1,:).*(1 - r(2,:)   ).*(1 + r(3,:)   ))/2,   (                                -(1 - r(1,:).^2).*(1 + r(3,:)   ))/4,   (                                 (1 - r(1,:).^2).*(1 - r(2,:)   ))/4;...
      (                                 (1 - r(2,:).^2).*(1 + r(3,:)   ))/4,   (                        -r(2,:).*(1 + r(1,:)   ).*(1 + r(3,:)   ))/2,   (                                 (1 + r(1,:)   ).*(1 - r(2,:).^2))/4;...
      (                        -r(1,:).*(1 + r(2,:)   ).*(1 + r(3,:)   ))/2,   (                                 (1 - r(1,:).^2).*(1 + r(3,:)   ))/4,   (                                 (1 - r(1,:).^2).*(1 + r(2,:)   ))/4;...
      (                                -(1 - r(2,:).^2).*(1 + r(3,:)   ))/4,   (                        -r(2,:).*(1 - r(1,:)   ).*(1 + r(3,:)   ))/2,   (                                 (1 - r(1,:)   ).*(1 - r(2,:).^2))/4;...
      (                                -(1 - r(2,:)   ).*(1 - r(3,:).^2))/4,   (                                -(1 - r(1,:)   ).*(1 - r(3,:).^2))/4,   (                        -r(3,:).*(1 - r(1,:)   ).*(1 - r(2,:)   ))/2;...
      (                                 (1 - r(2,:)   ).*(1 - r(3,:).^2))/4,   (                                -(1 + r(1,:)   ).*(1 - r(3,:).^2))/4,   (                        -r(3,:).*(1 + r(1,:)   ).*(1 - r(2,:)   ))/2;...
      (                                 (1 + r(2,:)   ).*(1 - r(3,:).^2))/4,   (                                 (1 + r(1,:)   ).*(1 - r(3,:).^2))/4,   (                        -r(3,:).*(1 + r(1,:)   ).*(1 + r(2,:)   ))/2;...
      (                                -(1 + r(2,:)   ).*(1 - r(3,:).^2))/4,   (                                 (1 - r(1,:)   ).*(1 - r(3,:).^2))/4,   (                        -r(3,:).*(1 - r(1,:)   ).*(1 + r(2,:)   ))/2];   
    FE.d2Ndxi2 = @(r)      [...    
      ( (1 - r(2,:)).*(1 - r(3,:)))/4,   ( (1 - r(1,:)).*(1 - r(3,:)))/4,   ( (1 - r(1,:)).*(1 - r(2,:)))/4,   ( (-2*r(1,:) - 2*r(2,:) - r(3,:)).*(1 - r(3,:)   ))/8,   ( (-r(1,:) - 2*r(2,:) - 2*r(3,:)).*(1 - r(1,:)   ))/8,   ( (-2*r(1,:) - r(2,:) - 2*r(3,:)).*(1 - r(2,:)   ))/8;...
      ( (1 - r(2,:)).*(1 - r(3,:)))/4,   ( (1 + r(1,:)).*(1 - r(3,:)))/4,   ( (1 + r(1,:)).*(1 - r(2,:)))/4,   ( (-2*r(1,:) + 2*r(2,:) + r(3,:)).*(1 - r(3,:)   ))/8,   ( ( r(1,:) - 2*r(2,:) - 2*r(3,:)).*(1 + r(1,:)   ))/8,   ( (-2*r(1,:) + r(2,:) + 2*r(3,:)).*(1 - r(2,:)   ))/8;...
      ( (1 + r(2,:)).*(1 - r(3,:)))/4,   ( (1 + r(1,:)).*(1 - r(3,:)))/4,   ( (1 + r(1,:)).*(1 + r(2,:)))/4,   ( ( 2*r(1,:) + 2*r(2,:) - r(3,:)).*(1 - r(3,:)   ))/8,   ( (-r(1,:) - 2*r(2,:) + 2*r(3,:)).*(1 + r(1,:)   ))/8,   ( (-2*r(1,:) - r(2,:) + 2*r(3,:)).*(1 + r(2,:)   ))/8;...
      ( (1 + r(2,:)).*(1 - r(3,:)))/4,   ( (1 - r(1,:)).*(1 - r(3,:)))/4,   ( (1 - r(1,:)).*(1 + r(2,:)))/4,   ( ( 2*r(1,:) - 2*r(2,:) + r(3,:)).*(1 - r(3,:)   ))/8,   ( ( r(1,:) - 2*r(2,:) + 2*r(3,:)).*(1 - r(1,:)   ))/8,   ( (-2*r(1,:) + r(2,:) - 2*r(3,:)).*(1 + r(2,:)   ))/8;...
      ( (1 - r(2,:)).*(1 + r(3,:)))/4,   ( (1 - r(1,:)).*(1 + r(3,:)))/4,   ( (1 - r(1,:)).*(1 - r(2,:)))/4,   ( (-2*r(1,:) - 2*r(2,:) + r(3,:)).*(1 + r(3,:)   ))/8,   ( ( r(1,:) + 2*r(2,:) - 2*r(3,:)).*(1 - r(1,:)   ))/8,   ( ( 2*r(1,:) + r(2,:) - 2*r(3,:)).*(1 - r(2,:)   ))/8;...
      ( (1 - r(2,:)).*(1 + r(3,:)))/4,   ( (1 + r(1,:)).*(1 + r(3,:)))/4,   ( (1 + r(1,:)).*(1 - r(2,:)))/4,   ( (-2*r(1,:) + 2*r(2,:) - r(3,:)).*(1 + r(3,:)   ))/8,   ( (-r(1,:) + 2*r(2,:) - 2*r(3,:)).*(1 + r(1,:)   ))/8,   ( ( 2*r(1,:) - r(2,:) + 2*r(3,:)).*(1 - r(2,:)   ))/8;...
      ( (1 + r(2,:)).*(1 + r(3,:)))/4,   ( (1 + r(1,:)).*(1 + r(3,:)))/4,   ( (1 + r(1,:)).*(1 + r(2,:)))/4,   ( ( 2*r(1,:) + 2*r(2,:) + r(3,:)).*(1 + r(3,:)   ))/8,   ( ( r(1,:) + 2*r(2,:) + 2*r(3,:)).*(1 + r(1,:)   ))/8,   ( ( 2*r(1,:) + r(2,:) + 2*r(3,:)).*(1 + r(2,:)   ))/8;...
      ( (1 + r(2,:)).*(1 + r(3,:)))/4,   ( (1 - r(1,:)).*(1 + r(3,:)))/4,   ( (1 - r(1,:)).*(1 + r(2,:)))/4,   ( ( 2*r(1,:) - 2*r(2,:) - r(3,:)).*(1 + r(3,:)   ))/8,   ( (-r(1,:) + 2*r(2,:) + 2*r(3,:)).*(1 - r(1,:)   ))/8,   ( ( 2*r(1,:) - r(2,:) - 2*r(3,:)).*(1 + r(2,:)   ))/8;...
      (-(1 - r(2,:)).*(1 - r(3,:)))/2,   0*r(1,:)                       ,   0*r(1,:)                       ,   (                         r(1,:) .*(1 - r(3,:)   ))/2,   (                                  (1 - r(1,:).^2))/4,   (                         r(1,:) .*(1 - r(2,:)   ))/2;...
      0*r(1,:)                       ,   (-(1 + r(1,:)).*(1 - r(3,:)))/2,   0*r(1,:)                       ,   (                        -r(2,:) .*(1 - r(3,:)   ))/2,   (                         r(2,:) .*(1 + r(1,:)   ))/2,   (                                 -(1 - r(2,:).^2))/4;...
      (-(1 + r(2,:)).*(1 - r(3,:)))/2,   0*r(1,:)                       ,   0*r(1,:)                       ,   (                        -r(1,:) .*(1 - r(3,:)   ))/2,   (                                 -(1 - r(1,:).^2))/4,   (                         r(1,:) .*(1 + r(2,:)   ))/2;...
      0*r(1,:)                       ,   (-(1 - r(1,:)).*(1 - r(3,:)))/2,   0*r(1,:)                       ,   (                         r(2,:) .*(1 - r(3,:)   ))/2,   (                         r(2,:) .*(1 - r(1,:)   ))/2,   (                                  (1 - r(2,:).^2))/4;...
      (-(1 - r(2,:)).*(1 + r(3,:)))/2,   0*r(1,:)                       ,   0*r(1,:)                       ,   (                         r(1,:) .*(1 + r(3,:)   ))/2,   (                                 -(1 - r(1,:).^2))/4,   (                        -r(1,:) .*(1 - r(2,:)   ))/2;...
      0*r(1,:)                       ,   (-(1 + r(1,:)).*(1 + r(3,:)))/2,   0*r(1,:)                       ,   (                        -r(2,:) .*(1 + r(3,:)   ))/2,   (                        -r(2,:) .*(1 + r(1,:)   ))/2,   (                                  (1 - r(2,:).^2))/4;...
      (-(1 + r(2,:)).*(1 + r(3,:)))/2,   0*r(1,:)                       ,   0*r(1,:)                       ,   (                        -r(1,:) .*(1 + r(3,:)   ))/2,   (                                  (1 - r(1,:).^2))/4,   (                        -r(1,:) .*(1 + r(2,:)   ))/2;...
      0*r(1,:)                       ,   (-(1 - r(1,:)).*(1 + r(3,:)))/2,   0*r(1,:)                       ,   (                         r(2,:) .*(1 + r(3,:)   ))/2,   (                        -r(2,:) .*(1 - r(1,:)   ))/2,   (                                 -(1 - r(2,:).^2))/4;...
      0*r(1,:)                       ,   0*r(1,:)                       ,   (-(1 - r(1,:)).*(1 - r(2,:)))/2,   (                                  (1 - r(3,:).^2))/4,   (                         r(3,:) .*(1 - r(1,:)   ))/2,   (                         r(3,:) .*(1 - r(2,:)   ))/2;...
      0*r(1,:)                       ,   0*r(1,:)                       ,   (-(1 + r(1,:)).*(1 - r(2,:)))/2,   (                                 -(1 - r(3,:).^2))/4,   (                         r(3,:) .*(1 + r(1,:)   ))/2,   (                        -r(3,:) .*(1 - r(2,:)   ))/2;...
      0*r(1,:)                       ,   0*r(1,:)                       ,   (-(1 + r(1,:)).*(1 + r(2,:)))/2,   (                                  (1 - r(3,:).^2))/4,   (                        -r(3,:) .*(1 + r(1,:)   ))/2,   (                        -r(3,:) .*(1 + r(2,:)   ))/2;...
      0*r(1,:)                       ,   0*r(1,:)                       ,   (-(1 - r(1,:)).*(1 + r(2,:)))/2,   (                                 -(1 - r(3,:).^2))/4,   (                        -r(3,:) .*(1 - r(1,:)   ))/2,   (                         r(3,:) .*(1 + r(2,:)   ))/2];  
    FE.xi      =            [...
      -1,   -1,   -1;...
      +1,   -1,   -1;...
      +1,   +1,   -1;...
      -1,   +1,   -1;...
      -1,   -1,   +1;...
      +1,   -1,   +1;...
      +1,   +1,   +1;...
      -1,   +1,   +1;...
      +0,   -1,   -1;...
      +1,   +0,   -1;...
      +0,   +1,   -1;...
      -1,   +0,   -1;...
      +0,   -1,   +1;...
      +1,   +0,   +1;...
      +0,   +1,   +1;...
      -1,   +0,   +1;...
      -1,   -1,   +0;...
      +1,   -1,   +0;...
      +1,   +1,   +0;...
      -1,   +1,   +0];
  case 'hexa27'
    % *** HEXA27 ******************************************************
    FE.N     = @(r) [...
      (-r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/8;...
      ( r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/8;...
      (-r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/8;...
      ( r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/8;...
      ( r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/8;...
      (-r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/8;...
      ( r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/8;...
      (-r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/8;...                                                           
      (         (1 - r(1,:).^2).*r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/4;...
      (-r(1,:).*(1 + r(1,:)   )        .*(1 - r(2,:).^2).*r(3,:).*(1 - r(3,:)   ))/4;...
      (-        (1 - r(1,:).^2).*r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/4;...
      ( r(1,:).*(1 - r(1,:)   )        .*(1 - r(2,:).^2).*r(3,:).*(1 - r(3,:)   ))/4;...
      (-        (1 - r(1,:).^2).*r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/4;...
      ( r(1,:).*(1 + r(1,:)   )        .*(1 - r(2,:).^2).*r(3,:).*(1 + r(3,:)   ))/4;...
      (         (1 - r(1,:).^2).*r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/4;...
      (-r(1,:).*(1 - r(1,:)   )        .*(1 - r(2,:).^2).*r(3,:).*(1 + r(3,:)   ))/4;...
      ( r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 - r(2,:)   )        .*(1 - r(3,:).^2))/4;...
      (-r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 - r(2,:)   )        .*(1 - r(3,:).^2))/4;...
      ( r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 + r(2,:)   )        .*(1 - r(3,:).^2))/4;...
      (-r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 + r(2,:)   )        .*(1 - r(3,:).^2))/4;...      
      (-        (1 - r(1,:).^2)        .*(1 - r(2,:).^2).*r(3,:).*(1 - r(3,:)   ))/2;...
      (         (1 - r(1,:).^2)        .*(1 - r(2,:).^2).*r(3,:).*(1 + r(3,:)   ))/2;...
      (-        (1 - r(1,:).^2).*r(2,:).*(1 - r(2,:)   )        .*(1 - r(3,:).^2))/2;...
      ( r(1,:).*(1 + r(1,:)   )        .*(1 - r(2,:).^2)        .*(1 - r(3,:).^2))/2;...
      (         (1 - r(1,:).^2).*r(2,:).*(1 + r(2,:)   )        .*(1 - r(3,:).^2))/2;...
      (-r(1,:).*(1 - r(1,:)   )        .*(1 - r(2,:).^2)        .*(1 - r(3,:).^2))/2;...
      (         (1 - r(1,:).^2)        .*(1 - r(2,:).^2)        .*(1 - r(3,:).^2))  ];
    FE.dNdxi = @(r) [...
      (-(1 - 2*r(1,:)).*r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/8,   (-r(1,:).*(1 - r(1,:)   ).*(1 - 2*r(2,:)).*r(3,:).*(1 - r(3,:)   ))/8,   (-r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 - r(2,:)   ).*(1 - 2*r(3,:)))/8;...
      ( (1 + 2*r(1,:)).*r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/8,   ( r(1,:).*(1 + r(1,:)   ).*(1 - 2*r(2,:)).*r(3,:).*(1 - r(3,:)   ))/8,   ( r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 - r(2,:)   ).*(1 - 2*r(3,:)))/8;...
      (-(1 + 2*r(1,:)).*r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/8,   (-r(1,:).*(1 + r(1,:)   ).*(1 + 2*r(2,:)).*r(3,:).*(1 - r(3,:)   ))/8,   (-r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 + r(2,:)   ).*(1 - 2*r(3,:)))/8;...
      ( (1 - 2*r(1,:)).*r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/8,   ( r(1,:).*(1 - r(1,:)   ).*(1 + 2*r(2,:)).*r(3,:).*(1 - r(3,:)   ))/8,   ( r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 + r(2,:)   ).*(1 - 2*r(3,:)))/8;...
      ( (1 - 2*r(1,:)).*r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/8,   ( r(1,:).*(1 - r(1,:)   ).*(1 - 2*r(2,:)).*r(3,:).*(1 + r(3,:)   ))/8,   ( r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 - r(2,:)   ).*(1 + 2*r(3,:)))/8;...
      (-(1 + 2*r(1,:)).*r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/8,   (-r(1,:).*(1 + r(1,:)   ).*(1 - 2*r(2,:)).*r(3,:).*(1 + r(3,:)   ))/8,   (-r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 - r(2,:)   ).*(1 + 2*r(3,:)))/8;...
      ( (1 + 2*r(1,:)).*r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/8,   ( r(1,:).*(1 + r(1,:)   ).*(1 + 2*r(2,:)).*r(3,:).*(1 + r(3,:)   ))/8,   ( r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 + r(2,:)   ).*(1 + 2*r(3,:)))/8;...
      (-(1 - 2*r(1,:)).*r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/8,   (-r(1,:).*(1 - r(1,:)   ).*(1 + 2*r(2,:)).*r(3,:).*(1 + r(3,:)   ))/8,   (-r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 + r(2,:)   ).*(1 + 2*r(3,:)))/8;...     
      (-(      r(1,:)).*r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/2,   (         (1 - r(1,:).^2).*(1 - 2*r(2,:)).*r(3,:).*(1 - r(3,:)   ))/4,   (         (1 - r(1,:).^2).*r(2,:).*(1 - r(2,:)   ).*(1 - 2*r(3,:)))/4;...
      (-(1 + 2*r(1,:))        .*(1 - r(2,:).^2).*r(3,:).*(1 - r(3,:)   ))/4,   ( r(1,:).*(1 + r(1,:)   ).*(      r(2,:)).*r(3,:).*(1 - r(3,:)   ))/2,   (-r(1,:).*(1 + r(1,:)   )        .*(1 - r(2,:).^2).*(1 - 2*r(3,:)))/4;...
      ( (      r(1,:)).*r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/2,   (-        (1 - r(1,:).^2).*(1 + 2*r(2,:)).*r(3,:).*(1 - r(3,:)   ))/4,   (-        (1 - r(1,:).^2).*r(2,:).*(1 + r(2,:)   ).*(1 - 2*r(3,:)))/4;...
      ( (1 - 2*r(1,:))        .*(1 - r(2,:).^2).*r(3,:).*(1 - r(3,:)   ))/4,   (-r(1,:).*(1 - r(1,:)   ).*(      r(2,:)).*r(3,:).*(1 - r(3,:)   ))/2,   ( r(1,:).*(1 - r(1,:)   )        .*(1 - r(2,:).^2).*(1 - 2*r(3,:)))/4;...
      ( (      r(1,:)).*r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/2,   (-        (1 - r(1,:).^2).*(1 - 2*r(2,:)).*r(3,:).*(1 + r(3,:)   ))/4,   (-        (1 - r(1,:).^2).*r(2,:).*(1 - r(2,:)   ).*(1 + 2*r(3,:)))/4;...
      ( (1 + 2*r(1,:))        .*(1 - r(2,:).^2).*r(3,:).*(1 + r(3,:)   ))/4,   (-r(1,:).*(1 + r(1,:)   ).*(      r(2,:)).*r(3,:).*(1 + r(3,:)   ))/2,   ( r(1,:).*(1 + r(1,:)   )        .*(1 - r(2,:).^2).*(1 + 2*r(3,:)))/4;...
      (-(      r(1,:)).*r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/2,   (         (1 - r(1,:).^2).*(1 + 2*r(2,:)).*r(3,:).*(1 + r(3,:)   ))/4,   (         (1 - r(1,:).^2).*r(2,:).*(1 + r(2,:)   ).*(1 + 2*r(3,:)))/4;...
      (-(1 - 2*r(1,:))        .*(1 - r(2,:).^2).*r(3,:).*(1 + r(3,:)   ))/4,   ( r(1,:).*(1 - r(1,:)   ).*(      r(2,:)).*r(3,:).*(1 + r(3,:)   ))/2,   (-r(1,:).*(1 - r(1,:)   )        .*(1 - r(2,:).^2).*(1 + 2*r(3,:)))/4;...
      ( (1 - 2*r(1,:)).*r(2,:).*(1 - r(2,:)   )        .*(1 - r(3,:).^2))/4,   ( r(1,:).*(1 - r(1,:)   ).*(1 - 2*r(2,:))        .*(1 - r(3,:).^2))/4,   (-r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 - r(2,:)   ).*(      r(3,:)))/2;...
      (-(1 + 2*r(1,:)).*r(2,:).*(1 - r(2,:)   )        .*(1 - r(3,:).^2))/4,   (-r(1,:).*(1 + r(1,:)   ).*(1 - 2*r(2,:))        .*(1 - r(3,:).^2))/4,   ( r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 - r(2,:)   ).*(      r(3,:)))/2;...
      ( (1 + 2*r(1,:)).*r(2,:).*(1 + r(2,:)   )        .*(1 - r(3,:).^2))/4,   ( r(1,:).*(1 + r(1,:)   ).*(1 + 2*r(2,:))        .*(1 - r(3,:).^2))/4,   (-r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 + r(2,:)   ).*(      r(3,:)))/2;...
      (-(1 - 2*r(1,:)).*r(2,:).*(1 + r(2,:)   )        .*(1 - r(3,:).^2))/4,   (-r(1,:).*(1 - r(1,:)   ).*(1 + 2*r(2,:))        .*(1 - r(3,:).^2))/4,   ( r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 + r(2,:)   ).*(      r(3,:)))/2;...
      ( (      r(1,:))        .*(1 - r(2,:).^2).*r(3,:).*(1 - r(3,:)   ))  ,   (         (1 - r(1,:).^2).*(      r(2,:)).*r(3,:).*(1 - r(3,:)   ))  ,   (-        (1 - r(1,:).^2)        .*(1 - r(2,:).^2).*(1 - 2*r(3,:)))/2;...
      (-(      r(1,:))        .*(1 - r(2,:).^2).*r(3,:).*(1 + r(3,:)   ))  ,   (-        (1 - r(1,:).^2).*(      r(2,:)).*r(3,:).*(1 + r(3,:)   ))  ,   (         (1 - r(1,:).^2)        .*(1 - r(2,:).^2).*(1 + 2*r(3,:)))/2;...
      ( (      r(1,:)).*r(2,:).*(1 - r(2,:)   )        .*(1 - r(3,:).^2))  ,   (-        (1 - r(1,:).^2).*(1 - 2*r(2,:))        .*(1 - r(3,:).^2))/2,   (         (1 - r(1,:).^2).*r(2,:).*(1 - r(2,:)   ).*(      r(3,:)))  ;...
      ( (1 + 2*r(1,:))        .*(1 - r(2,:).^2)        .*(1 - r(3,:).^2))/2,   (-r(1,:).*(1 + r(1,:)   ).*(      r(2,:))        .*(1 - r(3,:).^2))  ,   (-r(1,:).*(1 + r(1,:)   )        .*(1 - r(2,:).^2).*(      r(3,:)))  ;...
      (-(      r(1,:)).*r(2,:).*(1 + r(2,:)   )        .*(1 - r(3,:).^2))  ,   (         (1 - r(1,:).^2).*(1 + 2*r(2,:))        .*(1 - r(3,:).^2))/2,   (-        (1 - r(1,:).^2).*r(2,:).*(1 + r(2,:)   ).*(      r(3,:)))  ;...
      (-(1 - 2*r(1,:))        .*(1 - r(2,:).^2)        .*(1 - r(3,:).^2))/2,   ( r(1,:).*(1 - r(1,:)   ).*(      r(2,:))        .*(1 - r(3,:).^2))  ,   ( r(1,:).*(1 - r(1,:)   )        .*(1 - r(2,:).^2).*(      r(3,:)))  ;...
      (-(    2*r(1,:))        .*(1 - r(2,:).^2)        .*(1 - r(3,:).^2))  ,   (-        (1 - r(1,:).^2).*(    2*r(2,:))        .*(1 - r(3,:).^2))  ,   (-        (1 - r(1,:).^2)        .*(1 - r(2,:).^2).*(    2*r(3,:)))  ];
    FE.d2Ndxi2 = @(r)      [...    
      ( r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/4,   ( r(1,:).*(1 - r(1,:)   ).*r(3,:).*(1 - r(3,:)   ))/4,   ( r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 - r(2,:)   ))/4,   (-(1 - 2*r(1,:)).*(1 - 2*r(2,:)).*r(3,:).*(1 - r(3,:)   ))/8,   (-r(1,:).*(1 - r(1,:)   )*(1 - 2*r(2,:))*(1 - 2*r(3,:)))/8,   (-(1 - 2*r(1,:)).*r(2,:).*(1 - r(2,:)   ).*(1 - 2*r(3,:)))/8;...
      ( r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/4,   (-r(1,:).*(1 + r(1,:)   ).*r(3,:).*(1 - r(3,:)   ))/4,   (-r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 - r(2,:)   ))/4,   ( (1 + 2*r(1,:)).*(1 - 2*r(2,:)).*r(3,:).*(1 - r(3,:)   ))/8,   ( r(1,:).*(1 + r(1,:)   )*(1 - 2*r(2,:))*(1 - 2*r(3,:)))/8,   ( (1 + 2*r(1,:)).*r(2,:).*(1 - r(2,:)   ).*(1 - 2*r(3,:)))/8;...
      (-r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/4,   (-r(1,:).*(1 + r(1,:)   ).*r(3,:).*(1 - r(3,:)   ))/4,   ( r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 + r(2,:)   ))/4,   (-(1 + 2*r(1,:)).*(1 + 2*r(2,:)).*r(3,:).*(1 - r(3,:)   ))/8,   (-r(1,:).*(1 + r(1,:)   )*(1 + 2*r(2,:))*(1 - 2*r(3,:)))/8,   (-(1 + 2*r(1,:)).*r(2,:).*(1 + r(2,:)   ).*(1 - 2*r(3,:)))/8;...
      (-r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/4,   ( r(1,:).*(1 - r(1,:)   ).*r(3,:).*(1 - r(3,:)   ))/4,   (-r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 + r(2,:)   ))/4,   ( (1 - 2*r(1,:)).*(1 + 2*r(2,:)).*r(3,:).*(1 - r(3,:)   ))/8,   ( r(1,:).*(1 - r(1,:)   )*(1 + 2*r(2,:))*(1 - 2*r(3,:)))/8,   ( (1 - 2*r(1,:)).*r(2,:).*(1 + r(2,:)   ).*(1 - 2*r(3,:)))/8;...
      (-r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/4,   (-r(1,:).*(1 - r(1,:)   ).*r(3,:).*(1 + r(3,:)   ))/4,   ( r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 - r(2,:)   ))/4,   ( (1 - 2*r(1,:)).*(1 - 2*r(2,:)).*r(3,:).*(1 + r(3,:)   ))/8,   ( r(1,:).*(1 - r(1,:)   )*(1 - 2*r(2,:))*(1 + 2*r(3,:)))/8,   ( (1 - 2*r(1,:)).*r(2,:).*(1 - r(2,:)   ).*(1 + 2*r(3,:)))/8;...
      (-r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/4,   ( r(1,:).*(1 + r(1,:)   ).*r(3,:).*(1 + r(3,:)   ))/4,   (-r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 - r(2,:)   ))/4,   (-(1 + 2*r(1,:)).*(1 - 2*r(2,:)).*r(3,:).*(1 + r(3,:)   ))/8,   (-r(1,:).*(1 + r(1,:)   )*(1 - 2*r(2,:))*(1 + 2*r(3,:)))/8,   (-(1 + 2*r(1,:)).*r(2,:).*(1 - r(2,:)   ).*(1 + 2*r(3,:)))/8;...
      ( r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/4,   ( r(1,:).*(1 + r(1,:)   ).*r(3,:).*(1 + r(3,:)   ))/4,   ( r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 + r(2,:)   ))/4,   ( (1 + 2*r(1,:)).*(1 + 2*r(2,:)).*r(3,:).*(1 + r(3,:)   ))/8,   ( r(1,:).*(1 + r(1,:)   )*(1 + 2*r(2,:))*(1 + 2*r(3,:)))/8,   ( (1 + 2*r(1,:)).*r(2,:).*(1 + r(2,:)   ).*(1 + 2*r(3,:)))/8;...
      ( r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/4,   (-r(1,:).*(1 - r(1,:)   ).*r(3,:).*(1 + r(3,:)   ))/4,   (-r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 + r(2,:)   ))/4,   (-(1 - 2*r(1,:)).*(1 + 2*r(2,:)).*r(3,:).*(1 + r(3,:)   ))/8,   (-r(1,:).*(1 - r(1,:)   )*(1 + 2*r(2,:))*(1 + 2*r(3,:)))/8,   (-(1 - 2*r(1,:)).*r(2,:).*(1 + r(2,:)   ).*(1 + 2*r(3,:)))/8;...
      (-r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/2,   (-        (1 - r(1,:).^2).*r(3,:).*(1 - r(3,:)   ))/2,   (-        (1 - r(1,:).^2).*r(2,:).*(1 - r(2,:)   ))/2,   (-(      r(1,:)).*(1 - 2*r(2,:)).*r(3,:).*(1 - r(3,:)   ))/2,   (         (1 - r(1,:).^2)*(1 - 2*r(2,:))*(1 - 2*r(3,:)))/4,   (-(      r(1,:)).*r(2,:).*(1 - r(2,:)   ).*(1 - 2*r(3,:)))/2;...
      (-        (1 - r(2,:).^2).*r(3,:).*(1 - r(3,:)   ))/2,   ( r(1,:).*(1 + r(1,:)   ).*r(3,:).*(1 - r(3,:)   ))/2,   ( r(1,:).*(1 + r(1,:)   )        .*(1 - r(2,:).^2))/2,   ( (1 + 2*r(1,:)).*(      r(2,:)).*r(3,:).*(1 - r(3,:)   ))/2,   ( r(1,:).*(1 + r(1,:)   )*(      r(2,:))*(1 - 2*r(3,:)))/2,   (-(1 + 2*r(1,:))        .*(1 - r(2,:).^2).*(1 - 2*r(3,:)))/4;...
      ( r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 - r(3,:)   ))/2,   (-        (1 - r(1,:).^2).*r(3,:).*(1 - r(3,:)   ))/2,   (         (1 - r(1,:).^2).*r(2,:).*(1 + r(2,:)   ))/2,   ( (      r(1,:)).*(1 + 2*r(2,:)).*r(3,:).*(1 - r(3,:)   ))/2,   (-        (1 - r(1,:).^2)*(1 + 2*r(2,:))*(1 - 2*r(3,:)))/4,   ( (      r(1,:)).*r(2,:).*(1 + r(2,:)   ).*(1 - 2*r(3,:)))/2;...
      (-        (1 - r(2,:).^2).*r(3,:).*(1 - r(3,:)   ))/2,   (-r(1,:).*(1 - r(1,:)   ).*r(3,:).*(1 - r(3,:)   ))/2,   (-r(1,:).*(1 - r(1,:)   )        .*(1 - r(2,:).^2))/2,   (-(1 - 2*r(1,:)).*(      r(2,:)).*r(3,:).*(1 - r(3,:)   ))/2,   (-r(1,:).*(1 - r(1,:)   )*(      r(2,:))*(1 - 2*r(3,:)))/2,   ( (1 - 2*r(1,:))        .*(1 - r(2,:).^2).*(1 - 2*r(3,:)))/4;...
      ( r(2,:).*(1 - r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/2,   (         (1 - r(1,:).^2).*r(3,:).*(1 + r(3,:)   ))/2,   (-        (1 - r(1,:).^2).*r(2,:).*(1 - r(2,:)   ))/2,   ( (      r(1,:)).*(1 - 2*r(2,:)).*r(3,:).*(1 + r(3,:)   ))/2,   (-        (1 - r(1,:).^2)*(1 - 2*r(2,:))*(1 + 2*r(3,:)))/4,   ( (      r(1,:)).*r(2,:).*(1 - r(2,:)   ).*(1 + 2*r(3,:)))/2;...
      (         (1 - r(2,:).^2).*r(3,:).*(1 + r(3,:)   ))/2,   (-r(1,:).*(1 + r(1,:)   ).*r(3,:).*(1 + r(3,:)   ))/2,   ( r(1,:).*(1 + r(1,:)   )        .*(1 - r(2,:).^2))/2,   (-(1 + 2*r(1,:)).*(      r(2,:)).*r(3,:).*(1 + r(3,:)   ))/2,   (-r(1,:).*(1 + r(1,:)   )*(      r(2,:))*(1 + 2*r(3,:)))/2,   ( (1 + 2*r(1,:))        .*(1 - r(2,:).^2).*(1 + 2*r(3,:)))/4;...
      (-r(2,:).*(1 + r(2,:)   ).*r(3,:).*(1 + r(3,:)   ))/2,   (         (1 - r(1,:).^2).*r(3,:).*(1 + r(3,:)   ))/2,   (         (1 - r(1,:).^2).*r(2,:).*(1 + r(2,:)   ))/2,   (-(      r(1,:)).*(1 + 2*r(2,:)).*r(3,:).*(1 + r(3,:)   ))/2,   (         (1 - r(1,:).^2)*(1 + 2*r(2,:))*(1 + 2*r(3,:)))/4,   (-(      r(1,:)).*r(2,:).*(1 + r(2,:)   ).*(1 + 2*r(3,:)))/2;...
      (         (1 - r(2,:).^2).*r(3,:).*(1 + r(3,:)   ))/2,   ( r(1,:).*(1 - r(1,:)   ).*r(3,:).*(1 + r(3,:)   ))/2,   (-r(1,:).*(1 - r(1,:)   )        .*(1 - r(2,:).^2))/2,   ( (1 - 2*r(1,:)).*(      r(2,:)).*r(3,:).*(1 + r(3,:)   ))/2,   ( r(1,:).*(1 - r(1,:)   )*(      r(2,:))*(1 + 2*r(3,:)))/2,   (-(1 - 2*r(1,:))        .*(1 - r(2,:).^2).*(1 + 2*r(3,:)))/4;...
      (-r(2,:).*(1 - r(2,:)   )        .*(1 - r(3,:).^2))/2,   (-r(1,:).*(1 - r(1,:)   )        .*(1 - r(3,:).^2))/2,   (-r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 - r(2,:)   ))/2,   ( (1 - 2*r(1,:)).*(1 - 2*r(2,:))        .*(1 - r(3,:).^2))/4,   (-r(1,:).*(1 - r(1,:)   )*(1 - 2*r(2,:))*(      r(3,:)))/2,   (-(1 - 2*r(1,:)).*r(2,:).*(1 - r(2,:)   ).*(      r(3,:)))/2;...
      (-r(2,:).*(1 - r(2,:)   )        .*(1 - r(3,:).^2))/2,   ( r(1,:).*(1 + r(1,:)   )        .*(1 - r(3,:).^2))/2,   ( r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 - r(2,:)   ))/2,   (-(1 + 2*r(1,:)).*(1 - 2*r(2,:))        .*(1 - r(3,:).^2))/4,   ( r(1,:).*(1 + r(1,:)   )*(1 - 2*r(2,:))*(      r(3,:)))/2,   ( (1 + 2*r(1,:)).*r(2,:).*(1 - r(2,:)   ).*(      r(3,:)))/2;...
      ( r(2,:).*(1 + r(2,:)   )        .*(1 - r(3,:).^2))/2,   ( r(1,:).*(1 + r(1,:)   )        .*(1 - r(3,:).^2))/2,   (-r(1,:).*(1 + r(1,:)   ).*r(2,:).*(1 + r(2,:)   ))/2,   ( (1 + 2*r(1,:)).*(1 + 2*r(2,:))        .*(1 - r(3,:).^2))/4,   (-r(1,:).*(1 + r(1,:)   )*(1 + 2*r(2,:))*(      r(3,:)))/2,   (-(1 + 2*r(1,:)).*r(2,:).*(1 + r(2,:)   ).*(      r(3,:)))/2;...
      ( r(2,:).*(1 + r(2,:)   )        .*(1 - r(3,:).^2))/2,   (-r(1,:).*(1 - r(1,:)   )        .*(1 - r(3,:).^2))/2,   ( r(1,:).*(1 - r(1,:)   ).*r(2,:).*(1 + r(2,:)   ))/2,   (-(1 - 2*r(1,:)).*(1 + 2*r(2,:))        .*(1 - r(3,:).^2))/4,   ( r(1,:).*(1 - r(1,:)   )*(1 + 2*r(2,:))*(      r(3,:)))/2,   ( (1 - 2*r(1,:)).*r(2,:).*(1 + r(2,:)   ).*(      r(3,:)))/2;...
      (         (1 - r(2,:).^2).*r(3,:).*(1 - r(3,:)   ))  ,   (         (1 - r(1,:).^2).*r(3,:).*(1 - r(3,:)   ))  ,   (         (1 - r(1,:).^2)        .*(1 - r(2,:).^2))  ,   (-(    2*r(1,:)).*(      r(2,:)).*r(3,:).*(1 - r(3,:)   ))  ,   (         (1 - r(1,:).^2)*(      r(2,:))*(1 - 2*r(3,:)))  ,   ( (      r(1,:))        .*(1 - r(2,:).^2).*(1 - 2*r(3,:)))  ;...
      (-        (1 - r(2,:).^2).*r(3,:).*(1 + r(3,:)   ))  ,   (-        (1 - r(1,:).^2).*r(3,:).*(1 + r(3,:)   ))  ,   (         (1 - r(1,:).^2)        .*(1 - r(2,:).^2))  ,   ( (    2*r(1,:)).*(      r(2,:)).*r(3,:).*(1 + r(3,:)   ))  ,   (-        (1 - r(1,:).^2)*(      r(2,:))*(1 + 2*r(3,:)))  ,   (-(      r(1,:))        .*(1 - r(2,:).^2).*(1 + 2*r(3,:)))  ;...
      ( r(2,:).*(1 - r(2,:)   )        .*(1 - r(3,:).^2))  ,   (         (1 - r(1,:).^2)        .*(1 - r(3,:).^2))  ,   (         (1 - r(1,:).^2).*r(2,:).*(1 - r(2,:)   ))  ,   ( (      r(1,:)).*(1 - 2*r(2,:))        .*(1 - r(3,:).^2))  ,   (         (1 - r(1,:).^2)*(1 - 2*r(2,:))*(      r(3,:)))  ,   (-(    2*r(1,:)).*r(2,:).*(1 - r(2,:)   ).*(      r(3,:)))  ;...
      (         (1 - r(2,:).^2)        .*(1 - r(3,:).^2))  ,   (-r(1,:).*(1 + r(1,:)   )        .*(1 - r(3,:).^2))  ,   (-r(1,:).*(1 + r(1,:)   )        .*(1 - r(2,:).^2))  ,   (-(1 + 2*r(1,:)).*(      r(2,:))        .*(1 - r(3,:).^2))  ,   ( r(1,:).*(1 + r(1,:)   )*(    2*r(2,:))*(      r(3,:)))  ,   (-(1 + 2*r(1,:))        .*(1 - r(2,:).^2).*(      r(3,:)))  ;...
      (-r(2,:).*(1 + r(2,:)   )        .*(1 - r(3,:).^2))  ,   (         (1 - r(1,:).^2)        .*(1 - r(3,:).^2))  ,   (-        (1 - r(1,:).^2).*r(2,:).*(1 + r(2,:)   ))  ,   (-(      r(1,:)).*(1 + 2*r(2,:))        .*(1 - r(3,:).^2))  ,   (-        (1 - r(1,:).^2)*(1 + 2*r(2,:))*(      r(3,:)))  ,   ( (    2*r(1,:)).*r(2,:).*(1 + r(2,:)   ).*(      r(3,:)))  ;...
      (         (1 - r(2,:).^2)        .*(1 - r(3,:).^2))  ,   ( r(1,:).*(1 - r(1,:)   )        .*(1 - r(3,:).^2))  ,   ( r(1,:).*(1 - r(1,:)   )        .*(1 - r(2,:).^2))  ,   ( (1 - 2*r(1,:)).*(      r(2,:))        .*(1 - r(3,:).^2))  ,   (-r(1,:).*(1 - r(1,:)   )*(    2*r(2,:))*(      r(3,:)))  ,   ( (1 - 2*r(1,:))        .*(1 - r(2,:).^2).*(      r(3,:)))  ;...
      (-      2*(1 - r(2,:).^2)        .*(1 - r(3,:).^2))  ,   (-      2*(1 - r(1,:).^2)        .*(1 - r(3,:).^2))  ,   (-      2*(1 - r(1,:).^2)        .*(1 - r(2,:).^2))  ,   ( (    2*r(1,:)).*(    2*r(2,:))        .*(1 - r(3,:).^2))  ,   (         (1 - r(1,:).^2)*(    2*r(2,:))*(    2*r(3,:)))  ,   ( (    2*r(1,:))        .*(1 - r(2,:).^2).*(    2*r(3,:)))  ];  
    FE.xi      =            [...
      -1,   -1,   -1;...
      +1,   -1,   -1;...
      +1,   +1,   -1;...
      -1,   +1,   -1;...
      -1,   -1,   +1;...
      +1,   -1,   +1;...
      +1,   +1,   +1;...
      -1,   +1,   +1;...
      +0,   -1,   -1;...
      +1,   +0,   -1;...
      +0,   +1,   -1;...
      -1,   +0,   -1;...
      +0,   -1,   +1;...
      +1,   +0,   +1;...
      +0,   +1,   +1;...
      -1,   +0,   +1;...
      -1,   -1,   +0;...
      +1,   -1,   +0;...
      +1,   +1,   +0;...
      -1,   +1,   +0;...
      +0,   +0,   -1;...
      +0,   +0,   +1;...
      +0,   -1,   +0;...
      +1,   +0,   +0;...
      +0,   +1,   +0;...
      -1,   +0,   +0;...
      +0,   +0,   +0];
end
